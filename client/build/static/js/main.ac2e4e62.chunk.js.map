{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","utils/auth.js","utils/queries.js","components/Nav/index.js","components/Body/index.js","components/Footer/index.js","pages/Home.js","utils/mutations.js","pages/Login.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Signup.js","utils/helpers.js","components/Form/index.js","pages/Landing.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_CONTROL","UPDATE_SCREENINGS","reducer","state","action","type","control","screenings","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","QUERY_ME","gql","QUERY_CONTROL","QUERY_SCREENINGS","Nav","loggedIn","Auth","userData","useQuery","data","className","href","onClick","logout","me","role","to","Body","src","alt","Footer","class","Home","LOGIN","ADD_USER","ADD_SCREENING","Login","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","console","log","handleChange","target","name","id","onSubmit","htmlFor","onChange","placeholder","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","aria-label","Signup","username","addUser","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","Form","useContext","symptoms","contact","positiveTest","travel","screenDate","addScreening","controlLoading","loading","controlData","screeningLoading","screeningData","useEffect","controls","forEach","then","screening","handleScreeningSubmit","document","addEventListener","elems","querySelectorAll","Materialize","DatePicker","getInstance","onSelect","date","disabled","selected","map","documentor","credentials","label","newDate","moment","format","Landing","toUpperCase","client","ApolloClient","operation","setContext","headers","authorization","uri","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","origin","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ac2e4e62.chunk.js","sourcesContent":["export const UPDATE_USER = \"UPDATE_USER\";\nexport const ADD_SCREENING = \"ADD_SCREENING\";\n\nexport const UPDATE_CONTROL = \"UPDATE_CONTROL\";\nexport const UPDATE_SCREENINGS = \"UPDATE_SCREENINGS\";\n","import { useReducer } from \"react\";\nimport { UPDATE_CONTROL, UPDATE_SCREENINGS } from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated control array\n    case UPDATE_CONTROL:\n      return {\n        ...state,\n        control: [...action.control],\n      };\n    // if action type value is the value of `UPDATE_SCREENINGS`, return a new state object with an updated screenings array\n    case UPDATE_SCREENINGS:\n      return {\n        ...state,\n        screenings: [...action.screenings],\n      };\n    // if it's none of these actions, do not update state at all and keep things the same!\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from \"./reducers\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    control: [],\n    screenings: [],\n  });\n  // use this to confirm it works!\n  //console.log(state);\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n\n    window.location.assign(\"/landing\");\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem(\"id_token\");\n    // this will reload the page and reset the state of the application\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();\n","import gql from \"graphql-tag\";\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      username\n      email\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      role\n    }\n  }\n`;\n\nexport const QUERY_CONTROL = gql`\n  {\n    controls {\n      _id\n      documentor\n      screenNum {\n        _id\n        symptoms\n        contact\n        positiveTest\n        travel\n      }\n      credentials\n    }\n  }\n`;\n\nexport const QUERY_SCREENINGS = gql`\n  {\n    screenings {\n      _id\n      control {\n        _id\n        documentor\n        credentials\n      }\n      symptoms\n      contact\n      positiveTest\n      travel\n      screenDate\n      createdAt\n    }\n  }\n`;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { QUERY_ME } from \"../../utils/queries\";\n\nfunction Nav() {\n  const loggedIn = Auth.loggedIn();\n  const { data: userData } = useQuery(QUERY_ME);\n  //console.log(userData);\n\n\n  return (\n    <div>\n      {loggedIn && userData ? (\n        <nav className=\"nav-wrapper blue darken-1\">\n          <a href=\"/\" className=\"brand-logo left margin-left\">\n            Whatever Works 2.0\n          </a>\n          <ul className=\"flex-row right\">\n            <li className=\"mx-1\">\n              <a href=\"/\" onClick={() => Auth.logout()}>\n                Logout\n              </a>\n            </li>\n            <li className=\"margin-right\">DATA RENDERING LINK HERE</li>\n            {userData?.me?.role === \"admin\" ? (\n              <li className=\"mx-1\">\n                <a href=\"/signup\">Create Account</a>\n              </li>\n            ) : null}\n          </ul>\n        </nav>\n      ) : (\n        <nav className=\"nav-wrapper blue darken-1\">\n          <a href=\"/\" className=\"brand-logo left margin-left\">\n            Whatever Works 2.0\n          </a>\n          <ul className=\"flex-row right\">\n            <li className=\"mx-1\">\n              <Link to=\"/login\">Login</Link>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </div>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport Auth from '../../utils/auth';\n// import { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_ME } from '../../utils/queries';\n\nfunction Body() {\n\tconst loggedIn = Auth.loggedIn();\n\tconst { data: userData } = useQuery(QUERY_ME);\n\t//console.log(userData);\n\n\treturn (\n\t\t<div>\n\t\t\t{loggedIn && userData ? (\n\t\t\t\t<div className='row body-display'>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t{/* image from https://www.oogazone.com/wp-content/uploads/2018/06/best-free-data-analysis-design-concept-vector-library.jpg */}\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/547/940/original/data-analysis-illustration-vector.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/540/087/original/vector-analysis-word-lettering-illustration.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/547/754/non_2x/data-analysis-line-icons-illustration-vector.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className='row body-display'>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t{/* image from https://www.oogazone.com/wp-content/uploads/2018/06/best-free-data-analysis-design-concept-vector-library.jpg */}\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/547/940/original/data-analysis-illustration-vector.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/540/087/original/vector-analysis-word-lettering-illustration.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/547/754/non_2x/data-analysis-line-icons-illustration-vector.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Body;\n","import React from 'react';\nimport Auth from '../../utils/auth';\n// import { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_ME } from '../../utils/queries';\n\nfunction Footer() {\n\tconst loggedIn = Auth.loggedIn();\n\tconst { data: userData } = useQuery(QUERY_ME);\n\t//console.log(userData);\n\n\treturn (\n\t\t<div>\n\t\t\t{loggedIn && userData ? (\n\t\t\t\t<footer class='page-footer blue darken-1'>\n\t\t\t\t\t<div class='container'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col l6 s12'>\n\t\t\t\t\t\t\t\t<h5 class='white-text'>Footer Content</h5>\n\t\t\t\t\t\t\t\t<p class='grey-text text-lighten-4'>\n\t\t\t\t\t\t\t\t\tYou can use rows and columns here to organize your footer\n\t\t\t\t\t\t\t\t\tcontent.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col l4 offset-l2 s12'>\n\t\t\t\t\t\t\t\t<h5 class='white-text'>Links</h5>\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a class='grey-text text-lighten-3' href='/'>\n\t\t\t\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a class='grey-text text-lighten-3' href='/landing'>\n\t\t\t\t\t\t\t\t\t\t\tForms\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a class='grey-text text-lighten-3' href='#!'>\n\t\t\t\t\t\t\t\t\t\t\tView Data\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a class='grey-text text-lighten-3' href='#!'>\n\t\t\t\t\t\t\t\t\t\t\tContact Us\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='footer-copyright'>\n\t\t\t\t\t\t<div class='container'>© 2021 Whatever Works 2.0</div>\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t) : (\n\t\t\t\t<footer class='page-footer blue darken-1'>\n\t\t\t\t\t<div class='container'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col l6 s12'>\n\t\t\t\t\t\t\t\t<h5 class='white-text'>Footer Content</h5>\n\t\t\t\t\t\t\t\t<p class='grey-text text-lighten-4'>\n\t\t\t\t\t\t\t\t\tYou can use rows and columns here to organize your footer\n\t\t\t\t\t\t\t\t\tcontent.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col l4 offset-l2 s12'>\n\t\t\t\t\t\t\t\t<h5 class='white-text'>Links</h5>\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a class='grey-text text-lighten-3' href='/'>\n\t\t\t\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a class='grey-text text-lighten-3' href='/login'>\n\t\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='footer-copyright'>\n\t\t\t\t\t\t<div class='container'>© 2021 Whatever Works 2.0</div>\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Footer;\n","import React from 'react';\nimport Body from '../components/Body';\nimport Footer from '../components/Footer';\n\nconst Home = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Body />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import gql from \"graphql-tag\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        role\n        email\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $username: String!\n    $email: String!\n    $role: String!\n    $password: String!\n  ) {\n    addUser(\n      username: $username\n      email: $email\n      role: $role\n      password: $password\n    ) {\n      token\n      user {\n        _id\n        username\n        role\n        email\n      }\n    }\n  }\n`;\n\nexport const ADD_SCREENING = gql`\n  mutation addScreening(\n    $control: ID!\n    $symptoms: String!\n    $contact: String!\n    $positiveTest: String!\n    $travel: String!\n    $screenDate: String!\n  ) {\n    addScreening(\n      control: $control\n      symptoms: $symptoms\n      contact: $contact\n      positiveTest: $positiveTest\n      travel: $travel\n      screenDate: $screenDate\n    ) {\n      control {\n        _id\n        documentor\n        credentials\n      }\n      symptoms\n      contact\n      positiveTest\n      travel\n      screenDate\n    }\n  }\n`;\n\nexport const ADD_CONTROL = gql`\n  mutation addControl(\n    $documentor: String!\n    $screenNum: Int!\n    $credentials: String!\n  ) {\n    Control(\n      documentor: $documentor\n      screenNum: $screenNum\n      credentials: $credentials\n    )\n  }\n`;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n// import Footer from '../components/Footer';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: {\n          email: formState.email,\n          password: formState.password,\n        },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"my-1\" id=\"card-custom\">\n      <Link to=\"/\">← Go to Homepage</Link>\n      <h5 className=\"center align\">Welcome to whatever works!</h5>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input name=\"email\" type=\"email\" id=\"email\" onChange={handleChange} />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row center-align\">\n          <button\n            type=\"submit\"\n            className=\"waves-effect waves-light btn blue darken-1 login-btn\"\n          >\n            <i className=\"material-icons center\">send</i>\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\n\nfunction Jumbotron({ children }) {\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\theight: 560,\n\t\t\t\tclear: 'both',\n\t\t\t\tpaddingTop: 120,\n\t\t\t\ttextAlign: 'center'\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    username: \"\",\n    role: \"Admin\",\n    password: \"\",\n  });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        role: formState.role,\n        username: formState.username,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/\">← Go to Homepage</Link>\n\n      <h2>Create Account</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            placeholder=\"Username\"\n            name=\"username\"\n            type=\"username\"\n            id=\"username\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"role\">Select User Authorizaion</label>\n          <select\n            className=\"browser-default\"\n            name=\"role\"\n            type=\"role\"\n            id=\"role\"\n            onChange={handleChange}\n          >\n            <option value=\"admin\">Admin</option>\n            <option value=\"read/write\">Read/Write</option>\n            <option value=\"readOnly\">Read Only</option>\n          </select>\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","export function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open(\"covid-screening\", 1);\n    let db, tx, store;\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      db.createObjectStore(\"control\", { keyPath: \"_id\" });\n      db.createObjectStore(\"screenings\", { keyPath: \"_id\" });\n    };\n\n    request.onerror = function (e) {\n      console.log(\"There was an error\");\n    };\n\n    request.onsuccess = function (e) {\n      db = request.result;\n      tx = db.transaction(storeName, \"readwrite\");\n      store = tx.objectStore(storeName);\n\n      db.onerror = function (e) {\n        console.log(\"error\", e);\n      };\n\n      switch (method) {\n        case \"put\":\n          store.put(object);\n          resolve(object);\n          break;\n        case \"get\":\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n          break;\n        case \"delete\":\n          store.delete(object._id);\n          break;\n        default:\n          console.log(\"No valid method\");\n          break;\n      }\n\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_SCREENING } from \"../../utils/mutations\";\nimport { QUERY_CONTROL, QUERY_SCREENINGS } from \"../../utils/queries\";\nimport { UPDATE_CONTROL, UPDATE_SCREENINGS } from \"../../utils/actions\";\nimport { DatePicker } from \"react-materialize\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport Materialize from \"materialize-css\";\nimport moment from \"moment\";\n\nconst Form = () => {\n  const [state, dispatch] = useStoreContext();\n\n  const [formState, setFormState] = useState({\n    control: \"\",\n    symptoms: \"noSymptom\",\n    contact: \"no\",\n    positiveTest: \"no\",\n    travel: \"no\",\n    screenDate: \"\",\n  });\n  console.log(formState);\n\n  const [addScreening] = useMutation(ADD_SCREENING);\n  const { loading: controlLoading, data: controlData } = useQuery(\n    QUERY_CONTROL\n  );\n  const { loading: screeningLoading, data: screeningData } = useQuery(\n    QUERY_SCREENINGS\n  );\n  //console.log(controlData);\n  //const { controls } = controlData;\n  //console.log(controlData.controls);\n\n  useEffect(() => {\n    if (controlData) {\n      dispatch({\n        type: UPDATE_CONTROL,\n        control: controlData.controls,\n      });\n      controlData.controls.forEach((control) => {\n        idbPromise(\"control\", \"put\", control);\n      });\n    } else if (!controlLoading) {\n      idbPromise(\"control\", \"get\").then((controls) => {\n        dispatch({\n          type: UPDATE_CONTROL,\n          control: controls,\n        });\n      });\n    }\n  }, [controlData, controlLoading, dispatch]);\n\n  useEffect(() => {\n    if (screeningData) {\n      dispatch({\n        type: UPDATE_SCREENINGS,\n        screenings: screeningData,\n      });\n      screeningData.screenings.forEach((screening) => {\n        idbPromise(\"screenings\", \"put\", screening);\n      });\n    } else if (!screeningLoading) {\n      idbPromise(\"screenings\", \"get\").then((screenings) => {\n        dispatch({\n          type: UPDATE_SCREENINGS,\n          screenings: screenings,\n        });\n      });\n    }\n  }, [screeningData, screeningLoading, dispatch]);\n\n  const handleScreeningSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await addScreening({\n        variables: {\n          control: formState.control,\n          symptoms: formState.symptoms,\n          contact: formState.contact,\n          positiveTest: formState.positiveTest,\n          travel: formState.travel,\n          screenDate: formState.screenDate,\n        },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    var elems = document.querySelectorAll(\".datepicker\");\n    Materialize.DatePicker.getInstance(elems, {\n      onSelect: function (date) {\n        console.log(\"onSelect: \" + date);\n        setFormState({\n          ...formState,\n          screenDate: date,\n        });\n      },\n    });\n  });\n\n  return (\n    <div>\n      <form onSubmit={handleScreeningSubmit}>\n        <div>\n          <label htmlFor=\"control\">\n            Please select Control for this Screen.\n          </label>\n          <select\n            className=\"browser-default\"\n            name=\"control\"\n            type=\"select\"\n            id=\"control\"\n            onChange={handleChange}\n          >\n            <option disabled selected>\n              Select Control\n            </option>\n            {controlData ? (\n              controlData.controls.map((control) => (\n                <option value={control._id} key={control._id}>\n                  {control.documentor}\n                  {\" (\"}\n                  {control.credentials}\n                  {\") \"}\n                </option>\n              ))\n            ) : (\n              <option>Loading</option>\n            )}\n          </select>\n        </div>\n        <div>\n          <DatePicker\n            label=\"Screening Date\"\n            name=\"screenDate\"\n            id=\"screenDate\"\n            type=\"text\"\n            className=\"datepicker\"\n            value={formState.screenDate}\n            onChange={(newDate) => {\n              handleChange({\n                target: {\n                  id: \"screenDate\",\n                  name: \"screenDate\",\n                  value: moment(newDate).format(\"MMMM DD, YYYY\"),\n                },\n              });\n            }}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"symptoms\">\n            Do you have any of the following symptoms?\n          </label>\n          <select\n            className=\"browser-default\"\n            name=\"symptoms\"\n            type=\"select\"\n            id=\"symptoms\"\n            onChange={handleChange}\n          >\n            <option value=\"noSymptom\">No Symptoms</option>\n            <option value=\"cough\">New and persistent cough</option>\n            <option value=\"breath\">\n              Shortness of breath or any difficutlty breathing\n            </option>\n            <option value=\"fever\">Fever</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"contact\">\n            Have you been in contact with anyone in the last 14 days who is\n            experiencing these symptoms?\n          </label>\n          <select\n            className=\"browser-default\"\n            name=\"contact\"\n            type=\"select\"\n            id=\"contact\"\n            onChange={handleChange}\n          >\n            <option value=\"no\">No</option>\n            <option value=\"yes\">Yes</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"positiveTest\">\n            Have you been in contact with anyone who has since tested positive\n            for Covid-19?\n          </label>\n          <select\n            className=\"browser-default\"\n            name=\"positiveTest\"\n            type=\"select\"\n            id=\"positiveTest\"\n            onChange={handleChange}\n          >\n            <option value=\"no\">No</option>\n            <option value=\"yes\">Yes</option>\n            <option value=\"unsure\">Unsure</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"travel\">\n            Have you traveled abroad in the last 1-2 months?\n          </label>\n          <select\n            className=\"browser-default\"\n            name=\"travel\"\n            type=\"select\"\n            id=\"travel\"\n            onChange={handleChange}\n          >\n            <option value=\"no\">No</option>\n            <option value=\"yes\">Yes</option>\n          </select>\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Auth from \"../utils/auth\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { QUERY_ME } from \"../utils/queries\";\nimport Form from \"../components/Form\";\n// import { idbPromise } from \"../utils/helpers\"\n\nconst Landing = () => {\n  const loggedIn = Auth.loggedIn();\n  const { data: userData } = useQuery(QUERY_ME);\n\n  return (\n    <div className=\"container\">\n      <Link to=\"/\">← Go to Homepage</Link>\n      {loggedIn && userData ? (\n        <div>\n          <p>\n            Welcome <span>{userData?.me?.username}</span>\n          </p>\n          <p>\n            Authorization: <span>{userData?.me?.role.toUpperCase()}</span>\n          </p>\n          <div>\n            {userData?.me?.role === \"admin\" ? (\n              <div>\n                <Form />\n              </div>\n            ) : userData?.me?.role === \"read/write\" ? (\n              <div>\n                <Form />\n              </div>\n            ) : (\n              <div>\n                <p>\n                  if logged in and user does not have admin or read/write\n                  access, default to read only access\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>Please Login to Access your Forms!</h3>\n      )}\n    </div>\n  );\n};\n\nexport default Landing;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"materialize-css/dist/js/materialize.min.js\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Signup from \"./pages/Signup\";\nimport Landing from \"./pages/Landing\";\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem(\"id_token\");\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    });\n  },\n  uri: \"/graphql\",\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/landing\" component={Landing} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n  );\n  \n  export function register(config) {\n    if (\n      process.env.NODE_ENV === 'production' &&\n      'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n  \n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();\n"],"sourceRoot":""}