{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","utils/auth.js","utils/queries.js","components/Nav/index.js","components/Body/index.js","components/Footer/index.js","pages/Home.js","utils/mutations.js","pages/Login.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Signup.js","components/Form/index.js","pages/Landing.js","utils/helpers.js","pages/ViewData.js","App.js","index.js","serviceWorkerRegistration.js"],"names":["UPDATE_CONTROL","UPDATE_SCREENINGS","reducer","state","action","type","control","screenings","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","QUERY_ME","gql","QUERY_CONTROL","QUERY_SCREENINGS","Nav","loggedIn","Auth","userData","useQuery","data","className","href","onClick","logout","to","me","role","Body","src","alt","Footer","id","hidden","Home","LOGIN","ADD_USER","ADD_SCREENING","Login","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","console","log","handleChange","target","name","onSubmit","htmlFor","onChange","placeholder","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","aria-label","Signup","username","addUser","Form","symptoms","contact","positiveTest","travel","screenDate","addScreening","controlData","handleScreeningSubmit","document","addEventListener","elems","querySelectorAll","Materialize","DatePicker","getInstance","onSelect","date","label","newDate","moment","format","disabled","selected","controls","map","_id","documentor","credentials","Landing","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ViewData","useContext","controlLoading","loading","screeningLoading","screeningData","useEffect","forEach","then","screening","info","index","client","ApolloClient","operation","setContext","headers","authorization","uri","App","deferredPrompt","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","installButton","getElementById","installApp","prompt","userChoice","choiceResult","outcome","ReactDOM","render","StrictMode","evt","URL","process","origin","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8NAKaA,EAAiB,iBACjBC,EAAoB,oBCHpBC,EAAU,SAACC,EAAOC,GAC7B,OAAQA,EAAOC,MAEb,KAAKL,EACH,OAAO,2BACFG,GADL,IAEEG,QAAQ,YAAKF,EAAOE,WAGxB,KAAKL,EACH,OAAO,2BACFE,GADL,IAEEI,WAAW,YAAKH,EAAOG,WAAWA,cAGtC,QACE,OAAOJ,I,mBChBPK,EAAeC,0BACbC,EAAaF,EAAbE,SAEFC,EAAgB,SAAC,GAA6B,EAA3BC,MAA4B,IDiBnBC,ECjBMC,EAAY,4BDiBlBD,EChBY,CAC1CP,QAAS,GACTC,WAAY,IDePQ,qBAAWb,EAASW,IClBuB,mBAC3CV,EAD2C,KACpCa,EADoC,KAOlD,OAAO,cAACN,EAAD,aAAUE,MAAO,CAACT,EAAOa,IAAeF,K,0DC+BlC,M,0FAzCb,WACE,OAAOG,YAAOC,KAAKC,c,sBAGrB,WAEE,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,K,4BAGzC,SAAeA,GACb,IAEE,OADgBH,YAAOG,GACXE,IAAMC,KAAKC,MAAQ,IAG/B,MAAOC,GACP,OAAO,K,sBAIX,WAEE,OAAOC,aAAaC,QAAQ,c,mBAG9B,SAAMC,GAEJF,aAAaG,QAAQ,WAAYD,GAEjCE,OAAOC,SAASC,OAAO,c,oBAGzB,WAEEN,aAAaO,WAAW,YAExBH,OAAOC,SAASC,OAAO,S,+BC7BdE,GATaC,IAAH,sFASCA,IAAH,4GAWRC,EAAgBD,IAAH,6GAUbE,EAAmBF,IAAH,8PCkBdG,MA5Cf,WAAgB,IAAD,EACPC,EAAWC,EAAKD,WACRE,EAAaC,mBAASR,GAA5BS,KAGR,OACE,8BACGJ,GAAYE,EACX,sBAAKG,UAAU,4BAAf,UACE,mBAAGC,KAAK,IAAID,UAAU,8BAAtB,gCAGA,qBAAIA,UAAU,iBAAd,UACE,oBAAIA,UAAU,OAAd,SACE,mBAAGC,KAAK,IAAIC,QAAS,kBAAMN,EAAKO,UAAhC,sBAIF,6BACE,cAAC,IAAD,CAAMC,GAAG,YAAT,yBAEsB,WAAf,OAARP,QAAQ,IAARA,GAAA,UAAAA,EAAUQ,UAAV,eAAcC,MACb,oBAAIN,UAAU,OAAd,SACE,mBAAGC,KAAK,UAAR,8BAEA,WAIR,sBAAKD,UAAU,4BAAf,UACE,mBAAGC,KAAK,IAAID,UAAU,8BAAtB,gCAGA,oBAAIA,UAAU,iBAAd,SACE,oBAAIA,UAAU,OAAd,SACE,cAAC,IAAD,CAAMI,GAAG,SAAT,6BCiHCG,MApJf,WAKC,OAJiBX,EAAKD,WACKG,mBAASR,GAA5BS,KAIP,8BAEE,sBAAKC,UAAU,mBAAf,UACC,qBAAKA,UAAU,aAAf,SACC,sBAAKA,UAAU,OAAf,UACC,sBAAKA,UAAU,aAAf,UAEC,qBACCQ,IAAI,mHACJC,IAAI,KAEL,sBAAMT,UAAU,aAAhB,2BAED,qBAAKA,UAAU,eAAf,SACC,kLAMD,qBAAKA,UAAU,cAAf,SACC,mBAAGC,KAAK,IAAR,mCAIH,qBAAKD,UAAU,aAAf,SACC,sBAAKA,UAAU,OAAf,UACC,sBAAKA,UAAU,aAAf,UACC,qBACCQ,IAAI,6HACJC,IAAI,KAEL,sBAAMT,UAAU,aAAhB,2BAED,qBAAKA,UAAU,eAAf,SACC,kLAOD,qBAAKA,UAAU,cAAf,SACC,mBAAGC,KAAK,IAAR,mCAIH,qBAAKD,UAAU,aAAf,SACC,sBAAKA,UAAU,OAAf,UACC,sBAAKA,UAAU,aAAf,UACC,qBACCQ,IAAI,4HACJC,IAAI,KAEL,sBAAMT,UAAU,aAAhB,2BAED,qBAAKA,UAAU,eAAf,SACC,kLAMD,qBAAKA,UAAU,cAAf,SACC,mBAAGC,KAAK,IAAR,yCC0BOS,I,QAAAA,EAhGf,WACC,IAAMf,EAAWC,EAAKD,WACRE,EAAaC,mBAASR,GAA5BS,KAGR,OACC,8BACEJ,GAAYE,EACZ,yBAAQG,UAAU,4BAAlB,UACC,qBAAKA,UAAU,YAAf,SACC,sBAAKA,UAAU,MAAf,UACC,sBAAKA,UAAU,aAAf,UACC,oBAAIA,UAAU,aAAd,4BACA,mBAAGA,UAAU,2BAAb,mFAKD,sBAAKA,UAAU,uBAAf,UACC,oBAAIA,UAAU,aAAd,mBACA,+BACC,6BACC,mBAAGA,UAAU,2BAA2BC,KAAK,IAA7C,oBAID,6BACC,mBAAGD,UAAU,2BAA2BC,KAAK,WAA7C,qBAID,6BACC,mBAAGD,UAAU,2BAA2BC,KAAK,YAA7C,yBAID,6BACC,mBAAGD,UAAU,2BAA2BC,KAAK,KAA7C,0BAID,6BACC,wBAAQU,GAAG,iBAAiBC,QAAM,EAAlC,kCAQL,qBAAKZ,UAAU,mBAAf,SACC,qBAAKA,UAAU,YAAf,+CAIF,yBAAQA,UAAU,4BAAlB,UACC,qBAAKA,UAAU,YAAf,SACC,sBAAKA,UAAU,MAAf,UACC,sBAAKA,UAAU,aAAf,UACC,oBAAIA,UAAU,aAAd,4BACA,mBAAGA,UAAU,2BAAb,mFAKD,sBAAKA,UAAU,uBAAf,UACC,oBAAIA,UAAU,aAAd,mBACA,+BACC,6BACC,mBAAGA,UAAU,2BAA2BC,KAAK,IAA7C,oBAID,6BACC,mBAAGD,UAAU,2BAA2BC,KAAK,SAA7C,qBAID,6BACC,wBAAQU,GAAG,iBAAiBC,QAAM,EAAlC,kCAQL,qBAAKZ,UAAU,mBAAf,SACC,qBAAKA,UAAU,YAAf,kDC9ESa,EAVF,WACZ,OACC,gCACC,cAAC,EAAD,IACA,cAAC,EAAD,Q,iCCRUC,EAAQvB,IAAH,kPAcLwB,EAAWxB,IAAH,kXAwBRyB,EAAgBzB,IAAH,4jBA+BCA,IAAH,6PCmBT0B,MApFf,SAAe/C,GAAQ,IAAD,EACagD,mBAAS,CAC1CC,MAAO,GACPC,SAAU,KAHU,mBACdC,EADc,KACHC,EADG,OAKMC,sBAAYT,GALlB,mBAKdU,EALc,KAKLC,EALK,KAKLA,MAETC,EAAgB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACvBD,EAAME,iBADiB,kBAGUL,EAAM,CACnCM,UAAW,CACTX,MAAOE,EAAUF,MACjBC,SAAUC,EAAUD,YANH,OAGfW,EAHe,OASfvD,EAAQuD,EAAiBhC,KAAKyB,MAAMhD,MAC1CoB,EAAK4B,MAAMhD,GACXwD,QAAQC,IAAIF,GACZC,QAAQC,IAAIzD,GAZS,kDAcrBwD,QAAQC,IAAR,MAdqB,0DAAH,sDAkBjBC,EAAe,SAAAP,GAAU,IAAD,EACLA,EAAMQ,OAAtBC,EADqB,EACrBA,KAAMpE,EADe,EACfA,MACdsD,EAAa,2BACTD,GADQ,kBAEVe,EAAOpE,MAIV,OACC,sBAAKgC,UAAU,OAAf,UACC,8BACC,sBAAKW,GAAG,cAAR,UACC,oBAAIX,UAAU,eAAd,wCACA,uBAAMqC,SAAUX,EAAhB,UACC,sBAAK1B,UAAU,8BAAf,UACC,uBAAOsC,QAAQ,QAAf,4BACA,uBACCF,KAAK,QACL3E,KAAK,QACLkD,GAAG,QACH4B,SAAUL,OAGZ,sBAAKlC,UAAU,8BAAf,UACC,uBAAOsC,QAAQ,MAAf,uBACA,uBACCE,YAAY,SACZJ,KAAK,WACL3E,KAAK,WACLkD,GAAG,MACH4B,SAAUL,OAIXT,EACA,8BACC,mBAAGzB,UAAU,aAAb,sDAIE,KACJ,qBAAKA,UAAU,wBAAf,SACC,wBACCvC,KAAK,SACLuC,UAAU,uDAFX,SAIC,mBAAGA,UAAU,wBAAb,8BAML,qBAAKA,UAAU,eAAf,SACC,cAAC,EAAD,UCnEWyC,MAff,YAAkC,IAAbC,EAAY,EAAZA,SACpB,OACC,qBACCC,MAAO,CACNC,OAAQ,IACRC,MAAO,OACPC,WAAY,IACZC,UAAW,UALb,SAQEL,KCMWM,EAfC,WACd,OACE,8BACE,eAAC,EAAD,WACE,oDACA,6BACE,sBAAM1C,KAAK,MAAM2C,aAAW,+BAA5B,kCCsFKC,OAzFf,SAAgBhF,GAAQ,IAAD,EACagD,mBAAS,CACzCC,MAAO,GACPgC,SAAU,GACV7C,KAAM,QACNc,SAAU,KALS,mBACdC,EADc,KACHC,EADG,OAOHC,sBAAYR,GAAvBqC,EAPc,oBASf1B,EAAgB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACvBD,EAAME,iBADiB,SAEQuB,EAAQ,CACrCtB,UAAW,CACTX,MAAOE,EAAUF,MACjBC,SAAUC,EAAUD,SACpBd,KAAMe,EAAUf,KAChB6C,SAAU9B,EAAU8B,YAPD,OAEjBpB,EAFiB,OAUjBvD,EAAQuD,EAAiBhC,KAAKqD,QAAQ5E,MAC5CoB,EAAK4B,MAAMhD,GAXY,2CAAH,sDAchB0D,EAAe,SAACP,GAAW,IAAD,EACNA,EAAMQ,OAAtBC,EADsB,EACtBA,KAAMpE,EADgB,EAChBA,MACdsD,EAAa,2BACRD,GADO,kBAETe,EAAOpE,MAIZ,OACE,sBAAKgC,UAAU,iBAAf,UACE,cAAC,IAAD,CAAMI,GAAG,IAAT,mCAEA,gDACA,uBAAMiC,SAAUX,EAAhB,UACE,sBAAK1B,UAAU,8BAAf,UACE,uBAAOsC,QAAQ,WAAf,uBACA,uBACEE,YAAY,WACZJ,KAAK,WACL3E,KAAK,WACLkD,GAAG,WACH4B,SAAUL,OAGd,sBAAKlC,UAAU,8BAAf,UACE,uBAAOsC,QAAQ,QAAf,oBACA,uBACEE,YAAY,qBACZJ,KAAK,QACL3E,KAAK,QACLkD,GAAG,QACH4B,SAAUL,OAGd,gCACE,uBAAOI,QAAQ,OAAf,sCACA,yBACEtC,UAAU,kBACVoC,KAAK,OACL3E,KAAK,OACLkD,GAAG,OACH4B,SAAUL,EALZ,UAOE,wBAAQlE,MAAM,QAAd,mBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,WAAd,6BAGJ,sBAAKgC,UAAU,8BAAf,UACE,uBAAOsC,QAAQ,MAAf,uBACA,uBACEE,YAAY,SACZJ,KAAK,WACL3E,KAAK,WACLkD,GAAG,MACH4B,SAAUL,OAGd,qBAAKlC,UAAU,oBAAf,SACE,wBAAQvC,KAAK,SAAb,6B,oDCkKK4F,GA/OF,WAAM,MAGiBnC,mBAAS,CACzCxD,QAAS,GACT4F,SAAU,YACVC,QAAS,KACTC,aAAc,KACdC,OAAQ,KACRC,WAAY,KATG,mBAGVrC,EAHU,KAGCC,EAHD,KAWjBU,QAAQC,IAAIZ,GAXK,MAaME,sBAAYP,GAA5B2C,EAbU,oBAcHC,EAAgB9D,mBAASN,GAA/BO,KAgDF8D,EAAqB,uCAAG,WAAOlC,GAAP,SAAAC,EAAA,6DAC5BD,EAAME,iBADsB,kBAGpB8B,EAAa,CACjB7B,UAAW,CACTpE,QAAS2D,EAAU3D,QACnB4F,SAAUjC,EAAUiC,SACpBC,QAASlC,EAAUkC,QACnBC,aAAcnC,EAAUmC,aACxBC,OAAQpC,EAAUoC,OAClBC,WAAYrC,EAAUqC,cAVA,sDAc1B1B,QAAQC,IAAR,MAd0B,wDAAH,sDAkBrBC,EAAe,SAACP,GAAW,IAAD,EACNA,EAAMQ,OAAtBC,EADsB,EACtBA,KAAMpE,EADgB,EAChBA,MACdsD,EAAa,2BACRD,GADO,kBAETe,EAAOpE,MAiBZ,OAbA8F,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIC,EAAQF,SAASG,iBAAiB,eACtCC,KAAYC,WAAWC,YAAYJ,EAAO,CACxCK,SAAU,SAAUC,GAClBtC,QAAQC,IAAI,aAAeqC,GAC3BhD,EAAa,2BACRD,GADO,IAEVqC,WAAYY,WAOlB,8BACE,uBAAMjC,SAAUwB,EAAhB,UACE,sBAAK7D,UAAU,cAAf,UAEE,8BACE,cAAC,cAAD,CACEuE,MAAM,iBACNnC,KAAK,aACLzB,GAAG,aACHlD,KAAK,OACLuC,UAAU,aACVhC,MAAOqD,EAAUqC,WACjBnB,SAAU,SAACiC,GACTtC,EAAa,CACXC,OAAQ,CACNxB,GAAI,aACJyB,KAAM,aACNpE,MAAOyG,KAAOD,GAASE,OAAO,yBAOxC,gCACE,uBAAOpC,QAAQ,UAAf,oDAGA,yBACEtC,UAAU,kBACVoC,KAAK,UACL3E,KAAK,SACLkD,GAAG,UACH4B,SAAUL,EALZ,UAOE,wBAAQyC,UAAQ,EAACC,UAAQ,EAAzB,4BAGChB,EACCA,EAAYiB,SAASC,KAAI,SAACpH,GAAD,OACvB,yBAAQM,MAAON,EAAQqH,IAAvB,UACGrH,EAAQsH,WACR,KACAtH,EAAQuH,YACR,OAJ8BvH,EAAQqH,QAQ3C,mDAKN,gCACE,uBAAOzC,QAAQ,WAAf,wDAGA,yBACEtC,UAAU,kBACVoC,KAAK,WACL3E,KAAK,SACLkD,GAAG,WACH4B,SAAUL,EALZ,UAOE,wBAAQlE,MAAM,YAAd,yBACA,wBAAQA,MAAM,QAAd,sCACA,wBAAQA,MAAM,SAAd,8DAGA,wBAAQA,MAAM,QAAd,yBAIJ,gCACE,uBAAOsE,QAAQ,UAAf,0GAIA,yBACEtC,UAAU,kBACVoC,KAAK,UACL3E,KAAK,SACLkD,GAAG,UACH4B,SAAUL,EALZ,UAOE,wBAAQlE,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,uBAIJ,gCACE,uBAAOsE,QAAQ,eAAf,8FAIA,yBACEtC,UAAU,kBACVoC,KAAK,eACL3E,KAAK,SACLkD,GAAG,eACH4B,SAAUL,EALZ,UAOE,wBAAQlE,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,0BAIJ,gCACE,uBAAOsE,QAAQ,SAAf,8DAGA,yBACEtC,UAAU,kBACVoC,KAAK,SACL3E,KAAK,SACLkD,GAAG,SACH4B,SAAUL,EALZ,UAOE,wBAAQlE,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,0BAIN,qBAAKgC,UAAU,6CAAf,SACE,wBACEvC,KAAK,SACLuC,UAAU,6CAFZ,4BCzLKkF,GA9CC,WAAO,IAAD,IACdvF,EAAWC,EAAKD,WACRE,EAAaC,mBAASR,GAA5BS,KAER,OACE,gCACE,qBAAKC,UAAU,iBAAf,SACGL,GAAYE,EACX,gCAOE,oBAAIG,UAAU,eAAd,kCACA,8BAC0B,WAAf,OAARH,QAAQ,IAARA,GAAA,UAAAA,EAAUQ,UAAV,eAAcC,OAIY,gBAAf,OAART,QAAQ,IAARA,GAAA,UAAAA,EAAUQ,UAAV,eAAcC,MAHhB,8BACE,cAAC,GAAD,MAOF,8BACE,mIASR,sEAGJ,qBAAKN,UAAU,cAAf,SACE,cAAC,EAAD,UC/CD,SAASmF,GAAWC,EAAWC,EAAQC,GAC5C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IACIC,EAAIC,EAAIC,EADNC,EAAU3G,OAAO4G,UAAUC,KAAK,kBAAmB,GAEzDF,EAAQG,gBAAkB,SAAUC,GAClC,IAAMP,EAAKG,EAAQK,OACnBR,EAAGS,kBAAkB,UAAW,CAAEC,QAAS,QAC3CV,EAAGS,kBAAkB,aAAc,CAAEC,QAAS,SAGhDP,EAAQQ,QAAU,SAAUJ,GAC1BjE,QAAQC,IAAI,uBAGd4D,EAAQS,UAAY,SAAUL,GAS5B,OARAP,EAAKG,EAAQK,OACbP,EAAKD,EAAGa,YAAYnB,EAAW,aAC/BQ,EAAQD,EAAGa,YAAYpB,GAEvBM,EAAGW,QAAU,SAAUJ,GACrBjE,QAAQC,IAAI,QAASgE,IAGfZ,GACN,IAAK,MACHO,EAAMa,IAAInB,GACVE,EAAQF,GACR,MACF,IAAK,MACH,IAAMoB,EAAMd,EAAMe,SAClBD,EAAIJ,UAAY,WACdd,EAAQkB,EAAIR,SAEd,MACF,IAAK,SACHN,EAAMgB,OAAOtB,EAAOP,KACpB,MACF,QACE/C,QAAQC,IAAI,mBAIhB0D,EAAGkB,WAAa,WACdnB,EAAGoB,aCkEIC,OArGf,WAAqB,IAAD,EfSXC,qBAAWpJ,GeTA,mBACXL,EADW,KACJa,EADI,KAEZuB,EAAWC,EAAKD,WAFJ,EAMqCG,mBACrDN,GADeyH,EANC,EAMVC,QAA+BtD,EANrB,EAMe7D,KANf,EASgDD,mBAChEL,GADe0H,EATC,EASVD,QAA2BzF,EATjB,EASiBA,MAAa2F,EAT9B,EASwBrH,KA6C1C,OAzCAsH,qBAAU,WACJzD,GACFxF,EAAS,CACPX,KAAML,EACNM,QAASkG,EAAYiB,WAEvBjB,EAAYiB,SAASyC,SAAQ,SAAC5J,GAC5ByH,GAAW,UAAW,MAAOzH,OAErBuJ,GACV9B,GAAW,UAAW,OAAOoC,MAAK,SAAC1C,GACjCzG,EAAS,CACPX,KAAML,EACNM,QAASmH,SAId,CAACjB,EAAaqD,EAAgB7I,IAEjCiJ,qBAAU,WACJD,GACFhJ,EAAS,CACPX,KAAMJ,EACNM,WAAYyJ,IAEdA,EAAczJ,WAAW2J,SAAQ,SAACE,GAChCrC,GAAW,aAAc,MAAOqC,OAExBL,GACVhC,GAAW,aAAc,OAAOoC,MAAK,SAAC5J,GACpCS,EAAS,CACPX,KAAMJ,EACNM,WAAYA,SAIjB,CAACyJ,EAAeD,EAAkB/I,IAErC4D,QAAQC,IAAI1E,GAGP6J,EAGDD,EACK,6CAGL1F,GACFO,QAAQP,MAAMA,GACP,0CAIP,qBAAKzB,UAAU,YAAf,SACGL,GACC,gCACE,gFACA,qBAAKK,UAAU,MAAf,SACGoH,EAAczJ,WAAWmH,KAAI,SAAC2C,EAAMC,GAAP,OAC5B,qBAAK1H,UAAU,aAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,uBAAMA,UAAU,aAAhB,2BAA4CyH,EAAK1C,OACjD,mDAAsB0C,EAAKnE,YAC3B,sDAAyBmE,EAAKlE,WAC9B,sDAAyBkE,EAAKjE,gBAC9B,oDAAuBiE,EAAKhE,UAC5B,8BACGgE,EAAK/J,SACJ,+BACE,iDAAoB+J,EAAK/J,QAAQqH,OACjC,8CAAiB0C,EAAK/J,QAAQsH,cAC9B,+CAAkByC,EAAK/J,QAAQuH,wBAZKwC,EAAK1C,MADpB2C,aAlBpC,kEC/CLC,GAAS,IAAIC,IAAa,CAC/B/B,QAAS,SAAAgC,GACR,IAAMrJ,EAAQM,aAAaC,QAAQ,YACnC8I,EAAUC,WAAW,CACpBC,QAAS,CACRC,cAAexJ,EAAK,iBAAaA,GAAU,OAI9CyJ,IAAK,aAgCSC,ICnDXC,GDmDWD,GAzBf,WACE,OACE,cAAC,iBAAD,CAAgBP,OAAQA,GAAxB,SACE,cAAC,IAAD,UACE,8BACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,IAAIC,UAAWzH,IACjC,cAAC,IAAD,CAAOuH,OAAK,EAACC,KAAK,SAASC,UAAWrH,IACtC,cAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,UAAUC,UAAWpF,KACvC,cAAC,IAAD,CAAOkF,OAAK,EAACC,KAAK,WAAWC,UAAWpD,KACxC,cAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,YAAYC,UAAWvB,KACzC,cAAC,IAAD,CAAOuB,UAAWtF,iBEpC1BuF,GAAcC,QACW,cAA7BtJ,OAAOC,SAASsJ,UAEe,UAA7BvJ,OAAOC,SAASsJ,UAEhBvJ,OAAOC,SAASsJ,SAASC,MAAM,2DAgCnC,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTrB,MAAK,SAAC0B,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5L,QACfuL,UAAUC,cAAcO,YAI1BtH,QAAQC,IACN,+GAIE4G,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBjH,QAAQC,IAAI,sCAER4G,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAM,SAAChI,GACNO,QAAQP,MAAM,4CAA6CA,MD7EjE,IAAMiI,GAAgB5F,SAAS6F,eAAe,kBAU9C,SAASC,KAERzB,GAAe0B,SACfH,GAAc/E,UAAW,EAGzBwD,GAAe2B,WAAWvC,MAAK,SAAAwC,GACD,aAAzBA,EAAaC,SAChBhI,QAAQC,IAAI,sBACZyH,GAAc9I,QAAS,GAEvBoB,QAAQC,IAAI,sBAEbyH,GAAc/E,UAAW,EACzBwD,GAAiB,QAtBnB8B,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,GAAD,MAEDrG,SAAS6F,eAAe,SAuBzBzK,OAAO6E,iBAAiB,uBAAuB,SAAAkC,GAC9CjE,QAAQC,IAAI,6BAEZgE,EAAEpE,iBAEFsG,GAAiBlC,EAEjByD,GAAc9I,QAAS,EACvB8I,GAAc3F,iBAAiB,QAAS6F,OAIzC1K,OAAO6E,iBAAiB,gBAAgB,SAAAqG,GACvCpI,QAAQC,IAAI,qBAAsBmI,MCjC5B,SAAkBvB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIuB,IAAIC,GAAwBpL,OAAOC,SAASc,MACpDsK,SAAWrL,OAAOC,SAASoL,OAIvC,OAEFrL,OAAO6E,iBAAiB,QAAQ,WAC9B,IAAM6E,EAAK,UAAM0B,GAAN,sBACP/B,KA2DV,SAAiCK,EAAOC,GAEtC2B,MAAM5B,EAAO,CACXb,QAAS,CAAE,iBAAkB,YAE5BR,MAAK,SAACkD,GAEL,IAAMC,EAAcD,EAAS1C,QAAQ4C,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAMvD,MAAK,SAAC0B,GAClCA,EAAa8B,aAAaxD,MAAK,WAC7BrI,OAAOC,SAAS6L,eAKpBrC,GAAgBC,EAAOC,MAG1BY,OAAM,WACLzH,QAAQC,IAAI,oEAjFVgJ,CAAwBrC,EAAOC,GAG/BC,UAAUC,cAAc+B,MAAMvD,MAAK,WACjCvF,QAAQC,IACN,+GAMJ0G,GAAgBC,EAAOC,ODe/BE,K","file":"static/js/main.bd0be92f.chunk.js","sourcesContent":["\nexport const UPDATE_FORMS = \"UPDATE_FORMS\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const ADD_SCREENING = \"ADD_SCREENING\";\n\nexport const UPDATE_CONTROL = \"UPDATE_CONTROL\";\nexport const UPDATE_SCREENINGS = \"UPDATE_SCREENINGS\";\n","import { useReducer } from \"react\";\nimport { UPDATE_CONTROL, UPDATE_SCREENINGS } from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated control array\n    case UPDATE_CONTROL:\n      return {\n        ...state,\n        control: [...action.control],\n      };\n    // if action type value is the value of `UPDATE_SCREENINGS`, return a new state object with an updated screenings array\n    case UPDATE_SCREENINGS:\n      return {\n        ...state,\n        screenings: [...action.screenings.screenings],\n      };\n    // if it's none of these actions, do not update state at all and keep things the same!\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from \"./reducers\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    control: [],\n    screenings: [],\n  });\n  // use this to confirm it works!\n  //console.log(state);\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n\n    window.location.assign(\"/landing\");\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem(\"id_token\");\n    // this will reload the page and reset the state of the application\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();\n","import gql from \"graphql-tag\";\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      username\n      email\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      role\n    }\n  }\n`;\n\nexport const QUERY_CONTROL = gql`\n  {\n    controls {\n      _id\n      documentor\n      credentials\n    }\n  }\n`;\n\nexport const QUERY_SCREENINGS = gql`\n  {\n    screenings {\n      _id\n      control {\n        _id\n        documentor\n        credentials\n      }\n      symptoms\n      contact\n      positiveTest\n      travel\n      screenDate\n      createdAt\n    }\n  }\n`;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { QUERY_ME } from \"../../utils/queries\";\n\nfunction Nav() {\n  const loggedIn = Auth.loggedIn();\n  const { data: userData } = useQuery(QUERY_ME);\n  //console.log(userData);\n\n  return (\n    <div>\n      {loggedIn && userData ? (\n        <nav className=\"nav-wrapper blue darken-1\">\n          <a href=\"/\" className=\"brand-logo left margin-left\">\n            Whatever Works 2.0\n          </a>\n          <ul className=\"flex-row right\">\n            <li className=\"mx-1\">\n              <a href=\"/\" onClick={() => Auth.logout()}>\n                Logout\n              </a>\n            </li>\n            <li>\n              <Link to=\"/viewdata\">View Data</Link>\n            </li>\n            {userData?.me?.role === \"admin\" ? (\n              <li className=\"mx-1\">\n                <a href=\"/signup\">Create Account</a>\n              </li>\n            ) : null}\n          </ul>\n        </nav>\n      ) : (\n        <nav className=\"nav-wrapper blue darken-1\">\n          <a href=\"/\" className=\"brand-logo left margin-left\">\n            Whatever Works 2.0\n          </a>\n          <ul className=\"flex-row right\">\n            <li className=\"mx-1\">\n              <Link to=\"/login\">Login</Link>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </div>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport Auth from '../../utils/auth';\n// import { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_ME } from '../../utils/queries';\n\nfunction Body() {\n\tconst loggedIn = Auth.loggedIn();\n\tconst { data: userData } = useQuery(QUERY_ME);\n\t//console.log(userData);\n\n\treturn (\n\t\t<div>\n\t\t\t{loggedIn && userData ? (\n\t\t\t\t<div className='row body-display'>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t{/* image from https://www.oogazone.com/wp-content/uploads/2018/06/best-free-data-analysis-design-concept-vector-library.jpg */}\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/547/940/original/data-analysis-illustration-vector.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/540/087/original/vector-analysis-word-lettering-illustration.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/547/754/non_2x/data-analysis-line-icons-illustration-vector.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className='row body-display'>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t{/* image from https://www.oogazone.com/wp-content/uploads/2018/06/best-free-data-analysis-design-concept-vector-library.jpg */}\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/547/940/original/data-analysis-illustration-vector.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/540/087/original/vector-analysis-word-lettering-illustration.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/547/754/non_2x/data-analysis-line-icons-illustration-vector.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Body;\n","import React from 'react';\nimport Auth from '../../utils/auth';\n// import { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_ME } from '../../utils/queries';\n\nfunction Footer() {\n\tconst loggedIn = Auth.loggedIn();\n\tconst { data: userData } = useQuery(QUERY_ME);\n\t//console.log(userData);\n\n\treturn (\n\t\t<div>\n\t\t\t{loggedIn && userData ? (\n\t\t\t\t<footer className='page-footer blue darken-1'>\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t<div className='col l6 s12'>\n\t\t\t\t\t\t\t\t<h5 className='white-text'>Footer Content</h5>\n\t\t\t\t\t\t\t\t<p className='grey-text text-lighten-4'>\n\t\t\t\t\t\t\t\t\tYou can use rows and columns here to organize your footer\n\t\t\t\t\t\t\t\t\tcontent.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='col l4 offset-l2 s12'>\n\t\t\t\t\t\t\t\t<h5 className='white-text'>Links</h5>\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a className='grey-text text-lighten-3' href='/'>\n\t\t\t\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a className='grey-text text-lighten-3' href='/landing'>\n\t\t\t\t\t\t\t\t\t\t\tForms\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a className='grey-text text-lighten-3' href='/viewData'>\n\t\t\t\t\t\t\t\t\t\t\tView Data\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a className='grey-text text-lighten-3' href='#!'>\n\t\t\t\t\t\t\t\t\t\t\tContact Us\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<button id='install_button' hidden>\n\t\t\t\t\t\t\t\t\t\t\tInstall\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='footer-copyright'>\n\t\t\t\t\t\t<div className='container'>© 2021 Whatever Works 2.0</div>\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t) : (\n\t\t\t\t<footer className='page-footer blue darken-1'>\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t<div className='col l6 s12'>\n\t\t\t\t\t\t\t\t<h5 className='white-text'>Footer Content</h5>\n\t\t\t\t\t\t\t\t<p className='grey-text text-lighten-4'>\n\t\t\t\t\t\t\t\t\tYou can use rows and columns here to organize your footer\n\t\t\t\t\t\t\t\t\tcontent.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='col l4 offset-l2 s12'>\n\t\t\t\t\t\t\t\t<h5 className='white-text'>Links</h5>\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a className='grey-text text-lighten-3' href='/'>\n\t\t\t\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a className='grey-text text-lighten-3' href='/login'>\n\t\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<button id='install_button' hidden>\n\t\t\t\t\t\t\t\t\t\t\tInstall\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='footer-copyright'>\n\t\t\t\t\t\t<div className='container'>© 2021 Whatever Works 2.0</div>\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Footer;\n","import React from \"react\";\n// import Landing from \"../pages/Landing\";\n// import ViewData from \"./ViewData\";\nimport Body from '../components/Body';\nimport Footer from '../components/Footer';\n\nconst Home = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Body />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n\n};\n\nexport default Home;\n","import gql from \"graphql-tag\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        role\n        email\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $username: String!\n    $email: String!\n    $role: String!\n    $password: String!\n  ) {\n    addUser(\n      username: $username\n      email: $email\n      role: $role\n      password: $password\n    ) {\n      token\n      user {\n        _id\n        username\n        role\n        email\n      }\n    }\n  }\n`;\n\nexport const ADD_SCREENING = gql`\n  mutation addScreening(\n    $control: ID!\n    $symptoms: String!\n    $contact: String!\n    $positiveTest: String!\n    $travel: String!\n    $screenDate: String!\n  ) {\n    addScreening(\n      control: $control\n      symptoms: $symptoms\n      contact: $contact\n      positiveTest: $positiveTest\n      travel: $travel\n      screenDate: $screenDate\n    ) {\n      control {\n        _id\n        documentor\n        credentials\n      }\n      symptoms\n      contact\n      positiveTest\n      travel\n      screenDate\n    }\n  }\n`;\n\nexport const ADD_CONTROL = gql`\n  mutation addControl(\n    $documentor: String!\n    $screenNum: Int!\n    $credentials: String!\n  ) {\n    Control(\n      documentor: $documentor\n      screenNum: $screenNum\n      credentials: $credentials\n    )\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport Footer from '../components/Footer';\n\nfunction Login(props) {\n\tconst [formState, setFormState] = useState({\n\t\temail: '',\n\t\tpassword: ''\n\t});\n\tconst [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: {\n          email: formState.email,\n          password: formState.password,\n        },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n      console.log(mutationResponse);\n      console.log(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n\tconst handleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tsetFormState({\n\t\t\t...formState,\n\t\t\t[name]: value\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className='my-1'>\n\t\t\t<div>\n\t\t\t\t<div id='card-custom'>\n\t\t\t\t\t<h5 className='center align'>Welcome to whatever works!</h5>\n\t\t\t\t\t<form onSubmit={handleFormSubmit}>\n\t\t\t\t\t\t<div className='flex-row space-between my-2'>\n\t\t\t\t\t\t\t<label htmlFor='email'>Email address:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='flex-row space-between my-2'>\n\t\t\t\t\t\t\t<label htmlFor='pwd'>Password:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tplaceholder='******'\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tid='pwd'\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{error ? (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p className='error-text'>\n\t\t\t\t\t\t\t\t\tThe provided credentials are incorrect\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<div className='flex-row center-align'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\tclassName='waves-effect waves-light btn blue darken-1 login-btn'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className='material-icons center'>send</i>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='login-footer'>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React from 'react';\n\nfunction Jumbotron({ children }) {\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\theight: 560,\n\t\t\t\tclear: 'both',\n\t\t\t\tpaddingTop: 120,\n\t\t\t\ttextAlign: 'center'\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    username: \"\",\n    role: \"Admin\",\n    password: \"\",\n  });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        role: formState.role,\n        username: formState.username,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/\">← Go to Homepage</Link>\n\n      <h2>Create Account</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            placeholder=\"Username\"\n            name=\"username\"\n            type=\"username\"\n            id=\"username\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"role\">Select User Authorizaion</label>\n          <select\n            className=\"browser-default\"\n            name=\"role\"\n            type=\"role\"\n            id=\"role\"\n            onChange={handleChange}\n          >\n            <option value=\"admin\">Admin</option>\n            <option value=\"read/write\">Read/Write</option>\n            <option value=\"readOnly\">Read Only</option>\n          </select>\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\n//import { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_SCREENING } from \"../../utils/mutations\";\nimport { QUERY_CONTROL } from \"../../utils/queries\";\n//import { UPDATE_CONTROL, UPDATE_SCREENINGS } from \"../../utils/actions\";\nimport { DatePicker } from \"react-materialize\";\n// import { idbPromise } from \"../../utils/helpers\";\nimport Materialize from \"materialize-css\";\nimport moment from \"moment\";\n\nconst Form = () => {\n  //const [state, dispatch] = useStoreContext();\n\n  const [formState, setFormState] = useState({\n    control: \"\",\n    symptoms: \"noSymptom\",\n    contact: \"no\",\n    positiveTest: \"no\",\n    travel: \"no\",\n    screenDate: \"\",\n  });\n  console.log(formState);\n\n  const [addScreening] = useMutation(ADD_SCREENING);\n  const { data: controlData } = useQuery(QUERY_CONTROL);\n  // const { loading: screeningLoading, data: screeningData } = useQuery(\n  //   QUERY_SCREENINGS\n  // );\n  // //console.log(controlData);\n  // //const { controls } = controlData;\n  // //console.log(controlData.controls);\n\n  // useEffect(() => {\n  //   if (controlData) {\n  //     dispatch({\n  //       type: UPDATE_CONTROL,\n  //       control: controlData.controls,\n  //     });\n  //     controlData.controls.forEach((control) => {\n  //       idbPromise(\"control\", \"put\", control);\n  //     });\n  //   } else if (!controlLoading) {\n  //     idbPromise(\"control\", \"get\").then((controls) => {\n  //       dispatch({\n  //         type: UPDATE_CONTROL,\n  //         control: controls,\n  //       });\n  //     });\n  //   }\n  // }, [controlData, controlLoading, dispatch]);\n\n  // useEffect(() => {\n  //   if (screeningData) {\n  //     dispatch({\n  //       type: UPDATE_SCREENINGS,\n  //       screenings: screeningData,\n  //     });\n  //     screeningData.screenings.forEach((screening) => {\n  //       idbPromise(\"screenings\", \"put\", screening);\n  //     });\n  //   } else if (!screeningLoading) {\n  //     idbPromise(\"screenings\", \"get\").then((screenings) => {\n  //       dispatch({\n  //         type: UPDATE_SCREENINGS,\n  //         screenings: screenings,\n  //       });\n  //     });\n  //   }\n  // }, [screeningData, screeningLoading, dispatch]);\n\n  // console.log(state);\n\n  const handleScreeningSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await addScreening({\n        variables: {\n          control: formState.control,\n          symptoms: formState.symptoms,\n          contact: formState.contact,\n          positiveTest: formState.positiveTest,\n          travel: formState.travel,\n          screenDate: formState.screenDate,\n        },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    var elems = document.querySelectorAll(\".datepicker\");\n    Materialize.DatePicker.getInstance(elems, {\n      onSelect: function (date) {\n        console.log(\"onSelect: \" + date);\n        setFormState({\n          ...formState,\n          screenDate: date,\n        });\n      },\n    });\n  });\n\n  return (\n    <div>\n      <form onSubmit={handleScreeningSubmit}>\n        <div className=\"form-margin\">\n          {/* screening date section */}\n          <div>\n            <DatePicker\n              label=\"Screening Date\"\n              name=\"screenDate\"\n              id=\"screenDate\"\n              type=\"text\"\n              className=\"datepicker\"\n              value={formState.screenDate}\n              onChange={(newDate) => {\n                handleChange({\n                  target: {\n                    id: \"screenDate\",\n                    name: \"screenDate\",\n                    value: moment(newDate).format(\"MMMM DD, YYYY\"),\n                  },\n                });\n              }}\n            />\n          </div>\n          {/* selecting the control */}\n          <div>\n            <label htmlFor=\"control\">\n              Please select Control for this Screen.\n            </label>\n            <select\n              className=\"browser-default\"\n              name=\"control\"\n              type=\"select\"\n              id=\"control\"\n              onChange={handleChange}\n            >\n              <option disabled selected>\n                Select Control\n              </option>\n              {controlData ? (\n                controlData.controls.map((control) => (\n                  <option value={control._id} key={control._id}>\n                    {control.documentor}\n                    {\" (\"}\n                    {control.credentials}\n                    {\") \"}\n                  </option>\n                ))\n              ) : (\n                <option>Loading</option>\n              )}\n            </select>\n          </div>\n          {/* symptoms */}\n          <div>\n            <label htmlFor=\"symptoms\">\n              Do you have any of the following symptoms?\n            </label>\n            <select\n              className=\"browser-default\"\n              name=\"symptoms\"\n              type=\"select\"\n              id=\"symptoms\"\n              onChange={handleChange}\n            >\n              <option value=\"noSymptom\">No Symptoms</option>\n              <option value=\"cough\">New and persistent cough</option>\n              <option value=\"breath\">\n                Shortness of breath or any difficutlty breathing\n              </option>\n              <option value=\"fever\">Fever</option>\n            </select>\n          </div>\n          {/* have you been in contact */}\n          <div>\n            <label htmlFor=\"contact\">\n              Have you been in contact with anyone in the last 14 days who is\n              experiencing these symptoms?\n            </label>\n            <select\n              className=\"browser-default\"\n              name=\"contact\"\n              type=\"select\"\n              id=\"contact\"\n              onChange={handleChange}\n            >\n              <option value=\"no\">No</option>\n              <option value=\"yes\">Yes</option>\n            </select>\n          </div>\n          {/* postitive contacts */}\n          <div>\n            <label htmlFor=\"positiveTest\">\n              Have you been in contact with anyone who has since tested positive\n              for Covid-19?\n            </label>\n            <select\n              className=\"browser-default\"\n              name=\"positiveTest\"\n              type=\"select\"\n              id=\"positiveTest\"\n              onChange={handleChange}\n            >\n              <option value=\"no\">No</option>\n              <option value=\"yes\">Yes</option>\n              <option value=\"unsure\">Unsure</option>\n            </select>\n          </div>\n          {/* traveled */}\n          <div>\n            <label htmlFor=\"travel\">\n              Have you traveled abroad in the last 1-2 months?\n            </label>\n            <select\n              className=\"browser-default\"\n              name=\"travel\"\n              type=\"select\"\n              id=\"travel\"\n              onChange={handleChange}\n            >\n              <option value=\"no\">No</option>\n              <option value=\"yes\">Yes</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"flex-row flex-end center-align padding-top\">\n          <button\n            type=\"submit\"\n            className=\"waves-effect waves-light btn blue darken-1\"\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport Auth from \"../utils/auth\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { QUERY_ME } from \"../utils/queries\";\nimport Form from \"../components/Form\";\nimport Footer from \"../components/Footer\";\n\nconst Landing = () => {\n  const loggedIn = Auth.loggedIn();\n  const { data: userData } = useQuery(QUERY_ME);\n\n  return (\n    <div>\n      <div className=\"form-container\">\n        {loggedIn && userData ? (\n          <div>\n            {/* <p>\n\t\t\t\t\t\t\tWelcome <span>{userData?.me?.username}</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tAuthorization: <span>{userData?.me?.role.toUpperCase()}</span>\n\t\t\t\t\t\t</p> */}\n            <h3 className=\"center-align\">COVID Screening Form</h3>\n            <div>\n              {userData?.me?.role === \"admin\" ? (\n                <div>\n                  <Form />\n                </div>\n              ) : userData?.me?.role === \"read/write\" ? (\n                <div>\n                  <Form />\n                </div>\n              ) : (\n                <div>\n                  <p>\n                    if logged in and user does not have admin or read/write\n                    access, default to read only access\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        ) : (\n          <h3>Please Login to Access your Forms!</h3>\n        )}\n      </div>\n      <div className=\"form-footer\">\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","export function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open(\"covid-screening\", 1);\n    let db, tx, store;\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      db.createObjectStore(\"control\", { keyPath: \"_id\" });\n      db.createObjectStore(\"screenings\", { keyPath: \"_id\" });\n    };\n\n    request.onerror = function (e) {\n      console.log(\"There was an error\");\n    };\n\n    request.onsuccess = function (e) {\n      db = request.result;\n      tx = db.transaction(storeName, \"readwrite\");\n      store = tx.objectStore(storeName);\n\n      db.onerror = function (e) {\n        console.log(\"error\", e);\n      };\n\n      switch (method) {\n        case \"put\":\n          store.put(object);\n          resolve(object);\n          break;\n        case \"get\":\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n          break;\n        case \"delete\":\n          store.delete(object._id);\n          break;\n        default:\n          console.log(\"No valid method\");\n          break;\n      }\n\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}\n","import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { QUERY_CONTROL, QUERY_SCREENINGS } from \"../utils/queries\";\nimport { UPDATE_CONTROL, UPDATE_SCREENINGS } from \"../utils/actions\";\nimport Auth from \"../utils/auth\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction ViewData() {\n  const [state, dispatch] = useStoreContext();\n  const loggedIn = Auth.loggedIn();\n  //const { loading, error, data } = useQuery(QUERY_SCREENINGS);\n  // const controlId = data.screenings.map((screening) => screening.control.map((controls) => controls._id));\n\n  const { loading: controlLoading, data: controlData } = useQuery(\n    QUERY_CONTROL\n  );\n  const { loading: screeningLoading, error, data: screeningData } = useQuery(\n    QUERY_SCREENINGS\n  );\n\n  useEffect(() => {\n    if (controlData) {\n      dispatch({\n        type: UPDATE_CONTROL,\n        control: controlData.controls,\n      });\n      controlData.controls.forEach((control) => {\n        idbPromise(\"control\", \"put\", control);\n      });\n    } else if (!controlLoading) {\n      idbPromise(\"control\", \"get\").then((controls) => {\n        dispatch({\n          type: UPDATE_CONTROL,\n          control: controls,\n        });\n      });\n    }\n  }, [controlData, controlLoading, dispatch]);\n\n  useEffect(() => {\n    if (screeningData) {\n      dispatch({\n        type: UPDATE_SCREENINGS,\n        screenings: screeningData,\n      });\n      screeningData.screenings.forEach((screening) => {\n        idbPromise(\"screenings\", \"put\", screening);\n      });\n    } else if (!screeningLoading) {\n      idbPromise(\"screenings\", \"get\").then((screenings) => {\n        dispatch({\n          type: UPDATE_SCREENINGS,\n          screenings: screenings,\n        });\n      });\n    }\n  }, [screeningData, screeningLoading, dispatch]);\n\n  console.log(state);\n\n  // console.log(controlId);\n  if (!screeningData) {\n    return <div>No forms have been filled out.</div>;\n  }\n  if (screeningLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    console.error(error);\n    return <div>Error!</div>;\n  }\n\n  return (\n    <div className=\"container\">\n      {loggedIn && (\n        <div>\n          <h2>Here are the different forms you've completed:</h2>\n          <div className=\"row\">\n            {screeningData.screenings.map((info, index) => (\n              <div className=\"col s12 m4\" key={index}>\n                <div className=\"card blue-grey darken-1\" key={info._id}>\n                  <div className=\"card-content white-text\">\n                    <span className=\"card-title\">Screening Id: {info._id}</span>\n                    <p>Patient symptoms: {info.symptoms}</p>\n                    <p>Contact with others: {info.contact}</p>\n                    <p>Positive covid test: {info.positiveTest}</p>\n                    <p>Patient travelled: {info.travel}</p>\n                    <div>\n                      {info.control && (\n                        <ul>\n                          <li>Controller ID: {info.control._id}</li>\n                          <li>Documentor: {info.control.documentor}</li>\n                          <li>Credentials: {info.control.credentials}</li>\n                        </ul>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ViewData;\n","\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"materialize-css/dist/js/materialize.min.js\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Signup from \"./pages/Signup\";\nimport Landing from \"./pages/Landing\";\nimport ViewData from \"./pages/ViewData\";\n\nconst client = new ApolloClient({\n\trequest: operation => {\n\t\tconst token = localStorage.getItem('id_token');\n\t\toperation.setContext({\n\t\t\theaders: {\n\t\t\t\tauthorization: token ? `Bearer ${token}` : ''\n\t\t\t}\n\t\t});\n\t},\n\turi: '/graphql'\n});\n\n\n\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/landing\" component={Landing} />\n              <Route exact path=\"/viewdata\" component={ViewData} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorkerRegistration';\n\nlet deferredPrompt; // Allows to show the install prompt\nconst installButton = document.getElementById('install_button');\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// function that shows the install prompt\nfunction installApp() {\n\t// Show the prompt\n\tdeferredPrompt.prompt();\n\tinstallButton.disabled = true;\n\n\t// Wait for the user to respond to the prompt\n\tdeferredPrompt.userChoice.then(choiceResult => {\n\t\tif (choiceResult.outcome === 'accepted') {\n\t\t\tconsole.log('PWA setup accepted');\n\t\t\tinstallButton.hidden = true;\n\t\t} else {\n\t\t\tconsole.log('PWA setup rejected');\n\t\t}\n\t\tinstallButton.disabled = false;\n\t\tdeferredPrompt = null;\n\t});\n}\n\n//  intercept the beforeinstallprompt event which is fired when the PWA meets to install criteria. In this event event handler, we need to keep a reference to the event and show the install button.\nwindow.addEventListener('beforeinstallprompt', e => {\n\tconsole.log('beforeinstallprompt fired');\n\t// Prevent Chrome 76 and earlier from automatically showing a prompt\n\te.preventDefault();\n\t// Stash the event so it can be triggered later.\n\tdeferredPrompt = e;\n\t// Show the install button\n\tinstallButton.hidden = false;\n\tinstallButton.addEventListener('click', installApp);\n});\n\n// listen for the app installed event to perform any additional setup when the install finished\nwindow.addEventListener('appinstalled', evt => {\n\tconsole.log('appinstalled fired', evt);\n});\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}"],"sourceRoot":""}