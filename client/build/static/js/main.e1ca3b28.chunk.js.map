{"version":3,"sources":["utils/reducers.js","utils/actions.js","utils/GlobalState.js","utils/auth.js","utils/queries.js","components/Nav/index.js","components/Footer/index.js","components/Body/index.js","pages/Home.js","utils/mutations.js","pages/Login.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Signup.js","components/Form/index.js","pages/Landing.js","pages/ViewData.js","App.js","index.js","serviceWorkerRegistration.js"],"names":["reducer","state","action","type","control","screenings","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","QUERY_ME","gql","QUERY_CONTROL","QUERY_SCREENINGS","document","addEventListener","elems","querySelectorAll","Materialize","Sidenav","init","Nav","loggedIn","Auth","userData","useQuery","data","className","href","data-target","onClick","logout","to","me","role","id","Footer","hidden","Body","src","alt","Home","LOGIN","ADD_USER","ADD_SCREENING","Login","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","console","log","handleChange","target","name","onSubmit","htmlFor","onChange","placeholder","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","aria-label","Signup","username","addUser","Form","symptoms","contact","positiveTest","travel","screenDate","addScreening","controlData","handleScreeningSubmit","reset","DatePicker","getInstance","onSelect","date","label","newDate","moment","format","disabled","selected","controls","map","_id","documentor","credentials","Landing","ViewData","loading","JSON","stringify","info","index","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","deferredPrompt","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","installButton","getElementById","installApp","prompt","userChoice","choiceResult","outcome","ReactDOM","render","StrictMode","e","evt","URL","process","origin","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8NAGaA,EAAU,SAACC,EAAOC,GAC7B,OAAQA,EAAOC,MAEb,ICD0B,iBDExB,OAAO,2BACFF,GADL,IAEEG,QAAQ,YAAKF,EAAOE,WAGxB,ICN6B,oBDO3B,OAAO,2BACFH,GADL,IAEEI,WAAW,YAAKH,EAAOG,WAAWA,cAGtC,QACE,OAAOJ,I,mBEhBPK,EAAeC,0BACbC,EAAaF,EAAbE,SAEFC,EAAgB,SAAC,GAA6B,EAA3BC,MAA4B,IFiBnBC,EEjBMC,EAAY,4BFiBlBD,EEhBY,CAC1CP,QAAS,GACTC,WAAY,IFePQ,qBAAWb,EAASW,IElBuB,mBAC3CV,EAD2C,KACpCa,EADoC,KAOlD,OAAO,cAACN,EAAD,aAAUE,MAAO,CAACT,EAAOa,IAAeF,K,oEC+BlC,M,0FAzCb,WACE,OAAOG,YAAOC,KAAKC,c,sBAGrB,WAEE,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,K,4BAGzC,SAAeA,GACb,IAEE,OADgBH,YAAOG,GACXE,IAAMC,KAAKC,MAAQ,IAG/B,MAAOC,GACP,OAAO,K,sBAIX,WAEE,OAAOC,aAAaC,QAAQ,c,mBAG9B,SAAMC,GAEJF,aAAaG,QAAQ,WAAYD,GAEjCE,OAAOC,SAASC,OAAO,c,oBAGzB,WAEEN,aAAaO,WAAW,YAExBH,OAAOC,SAASC,OAAO,S,+BC7BdE,GATaC,IAAH,sFASCA,IAAH,4GAWRC,EAAgBD,IAAH,6GAUbE,EAAmBF,IAAH,8PCzB7BG,SAASC,iBAAiB,oBAAoB,WAC7C,IAAIC,EAAQF,SAASG,iBAAiB,YACtCC,IAAYC,QAAQC,KAAKJ,EAAO,OAmGlBK,MAhGf,WAAgB,IAAD,IACRC,EAAWC,EAAKD,WACRE,EAAaC,mBAASf,GAA5BgB,KAGR,OACC,mCACC,8BACEJ,GAAYE,EACZ,qCAEC,sBAAKG,UAAU,4BAAf,UACC,mBAAGC,KAAK,IAAID,UAAU,8BAAtB,gCAGA,mBACCC,KAAK,KACLC,cAAY,cACZF,UAAU,wBAHX,SAKC,mBAAGA,UAAU,iBAAb,oBAED,qBAAIA,UAAU,sCAAd,UACC,oBAAIA,UAAU,qBAAd,SACC,mBAAGC,KAAK,IAAIE,QAAS,kBAAMP,EAAKQ,UAAhC,sBAID,oBAAIJ,UAAU,gBAAd,SACC,cAAC,IAAD,CAAMK,GAAG,YAAT,yBAEuB,WAAf,OAARR,QAAQ,IAARA,GAAA,UAAAA,EAAUS,UAAV,eAAcC,MACd,oBAAIP,UAAU,OAAd,SACC,mBAAGC,KAAK,UAAR,8BAEE,WAKN,qBAAID,UAAU,UAAUQ,GAAG,cAA3B,UACC,oBAAIR,UAAU,qBAAd,SACC,mBAAGC,KAAK,IAAIE,QAAS,kBAAMP,EAAKQ,UAAhC,sBAID,oBAAIJ,UAAU,gBAAd,SACC,cAAC,IAAD,CAAMK,GAAG,IAAT,oBAED,oBAAIL,UAAU,gBAAd,SACC,cAAC,IAAD,CAAMK,GAAG,WAAT,qBAED,oBAAIL,UAAU,gBAAd,SACC,cAAC,IAAD,CAAMK,GAAG,YAAT,yBAEuB,WAAf,OAARR,QAAQ,IAARA,GAAA,UAAAA,EAAUS,UAAV,eAAcC,MACd,oBAAIP,UAAU,qBAAd,SACC,mBAAGC,KAAK,UAAR,8BAEE,WAIN,qCAEC,sBAAKD,UAAU,4BAAf,UACC,mBAAGC,KAAK,IAAID,UAAU,8BAAtB,gCAGA,mBACCC,KAAK,KACLC,cAAY,cACZF,UAAU,wBAHX,SAKC,mBAAGA,UAAU,iBAAb,oBAED,oBAAIA,UAAU,sCAAd,SACC,oBAAIA,UAAU,qBAAd,SACC,cAAC,IAAD,CAAMK,GAAG,SAAT,0BAMH,oBAAIL,UAAU,UAAUQ,GAAG,cAA3B,SACC,oBAAIR,UAAU,qBAAd,SACC,cAAC,IAAD,CAAMK,GAAG,SAAT,+BCMOI,MAlGf,WACE,IAAMd,EAAWC,EAAKD,WACRE,EAAaC,mBAASf,GAA5BgB,KAGR,OACE,8BACGJ,GAAYE,EAEX,yBAAQG,UAAU,wCAAlB,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,aAAd,4BACA,mBAAGA,UAAU,2BAAb,mFAKF,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,+BACE,6BACE,mBAAGA,UAAU,2BAA2BC,KAAK,IAA7C,oBAIF,6BACE,mBAAGD,UAAU,2BAA2BC,KAAK,WAA7C,qBAIF,6BACE,mBAAGD,UAAU,2BAA2BC,KAAK,YAA7C,yBAIF,6BACE,mBAAGD,UAAU,2BAA2BC,KAAK,KAA7C,0BAIF,6BACE,wBAAQO,GAAG,iBAAiBE,QAAM,EAAlC,kCAQV,qBAAKV,UAAU,mBAAf,SACE,qBAAKA,UAAU,YAAf,+CAKJ,yBAAQA,UAAU,wCAAlB,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,aAAd,4BACA,mBAAGA,UAAU,2BAAb,mFAKF,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,+BACE,6BACE,mBAAGA,UAAU,2BAA2BC,KAAK,IAA7C,oBAIF,6BACE,mBAAGD,UAAU,2BAA2BC,KAAK,SAA7C,qBAIF,6BACE,wBAAQO,GAAG,iBAAiBE,QAAM,EAAlC,kCAQV,qBAAKV,UAAU,mBAAf,SACE,qBAAKA,UAAU,YAAf,kDC0DGW,I,QAAAA,EApJf,WAKC,OAJiBf,EAAKD,WACKG,mBAASf,GAA5BgB,KAIP,8BAEE,sBAAKC,UAAU,mBAAf,UACC,qBAAKA,UAAU,aAAf,SACC,sBAAKA,UAAU,OAAf,UACC,sBAAKA,UAAU,aAAf,UAEC,qBACCY,IAAI,mHACJC,IAAI,KAEL,sBAAMb,UAAU,aAAhB,2BAED,qBAAKA,UAAU,eAAf,SACC,kLAMD,qBAAKA,UAAU,cAAf,SACC,mBAAGC,KAAK,IAAR,mCAIH,qBAAKD,UAAU,aAAf,SACC,sBAAKA,UAAU,OAAf,UACC,sBAAKA,UAAU,aAAf,UACC,qBACCY,IAAI,6HACJC,IAAI,KAEL,sBAAMb,UAAU,aAAhB,2BAED,qBAAKA,UAAU,eAAf,SACC,kLAOD,qBAAKA,UAAU,cAAf,SACC,mBAAGC,KAAK,IAAR,mCAIH,qBAAKD,UAAU,aAAf,SACC,sBAAKA,UAAU,OAAf,UACC,sBAAKA,UAAU,aAAf,UACC,qBACCY,IAAI,4HACJC,IAAI,KAEL,sBAAMb,UAAU,aAAhB,2BAED,qBAAKA,UAAU,eAAf,SACC,kLAMD,qBAAKA,UAAU,cAAf,SACC,mBAAGC,KAAK,IAAR,yCC7DOa,EAVF,WACZ,OACC,mCACC,qBAAKd,UAAU,MAAf,SACC,cAAC,EAAD,S,iCCPSe,EAAQ/B,IAAH,kPAcLgC,EAAWhC,IAAH,kXAwBRiC,EAAgBjC,IAAH,4jBA+BCA,IAAH,6PCiBTkC,MAnFf,SAAevD,GAAQ,IAAD,EACawD,mBAAS,CAC1CC,MAAO,GACPC,SAAU,KAHU,mBACdC,EADc,KACHC,EADG,OAKMC,sBAAYT,GALlB,mBAKdU,EALc,KAKLC,EALK,KAKLA,MAEVC,EAAgB,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACxBD,EAAME,iBADkB,kBAGQL,EAAM,CACpCM,UAAW,CACVX,MAAOE,EAAUF,MACjBC,SAAUC,EAAUD,YANC,OAGjBW,EAHiB,OASjB/D,EAAQ+D,EAAiBjC,KAAK0B,MAAMxD,MAC1C2B,EAAK6B,MAAMxD,GACXgE,QAAQC,IAAIF,GACZC,QAAQC,IAAIjE,GAZW,kDAcvBgE,QAAQC,IAAR,MAduB,0DAAH,sDAkBhBC,EAAe,SAAAP,GAAU,IAAD,EACLA,EAAMQ,OAAtBC,EADqB,EACrBA,KAAM5E,EADe,EACfA,MACd8D,EAAa,2BACTD,GADQ,kBAEVe,EAAO5E,MAIV,OACC,mCACC,qBAAKuC,UAAU,mBAAf,SACC,qBAAKA,UAAU,OAAf,SACC,sBAAKQ,GAAG,cAAR,UACC,oBAAIR,UAAU,eAAd,wCACA,uBAAMsC,SAAUX,EAAhB,UACC,sBAAK3B,UAAU,8BAAf,UACC,uBAAOuC,QAAQ,QAAf,4BACA,uBACCF,KAAK,QACLnF,KAAK,QACLsD,GAAG,QACHgC,SAAUL,OAGZ,sBAAKnC,UAAU,8BAAf,UACC,uBAAOuC,QAAQ,MAAf,uBACA,uBACCE,YAAY,SACZJ,KAAK,WACLnF,KAAK,WACLsD,GAAG,MACHgC,SAAUL,OAIXT,EACA,8BACC,mBAAG1B,UAAU,aAAb,sDAIE,KACJ,qBAAKA,UAAU,wBAAf,SACC,wBACC9C,KAAK,SACL8C,UAAU,uDAFX,SAIC,mBAAGA,UAAU,wBAAb,mCC5DM0C,MAff,YAAkC,IAAbC,EAAY,EAAZA,SACpB,OACC,qBACCC,MAAO,CACNC,OAAQ,IACRC,MAAO,OACPC,WAAY,IACZC,UAAW,UALb,SAQEL,KCMWM,EAfC,WACd,OACE,8BACE,eAAC,EAAD,WACE,oDACA,6BACE,sBAAM1C,KAAK,MAAM2C,aAAW,+BAA5B,kCCmFKC,OAtFf,SAAgBxF,GAAQ,IAAD,EACYwD,mBAAS,CAC1CC,MAAO,GACPgC,SAAU,GACV7C,KAAM,QACNc,SAAU,KALW,mBACfC,EADe,KACJC,EADI,OAOJC,sBAAYR,GAAvBqC,EAPe,oBAShB1B,EAAgB,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACxBD,EAAME,iBADkB,SAEOuB,EAAQ,CACtCtB,UAAW,CACVX,MAAOE,EAAUF,MACjBC,SAAUC,EAAUD,SACpBd,KAAMe,EAAUf,KAChB6C,SAAU9B,EAAU8B,YAPE,OAElBpB,EAFkB,OAUlB/D,EAAQ+D,EAAiBjC,KAAKsD,QAAQpF,MAC5C2B,EAAK6B,MAAMxD,GAXa,2CAAH,sDAchBkE,EAAe,SAAAP,GAAU,IAAD,EACLA,EAAMQ,OAAtBC,EADqB,EACrBA,KAAM5E,EADe,EACfA,MACd8D,EAAa,2BACTD,GADQ,kBAEVe,EAAO5E,MAIV,OACC,mCACC,qBAAKuC,UAAU,MAAf,SACC,sBAAKA,UAAU,8BAAf,UACC,oBAAIA,UAAU,eAAd,4BACA,uBAAMsC,SAAUX,EAAhB,UACC,sBAAK3B,UAAU,8BAAf,UACC,uBAAOuC,QAAQ,QAAf,oBACA,uBACCE,YAAY,qBACZJ,KAAK,QACLnF,KAAK,QACLsD,GAAG,QACHgC,SAAUL,OAGZ,gCACC,uBAAOI,QAAQ,OAAf,sCACA,yBACCvC,UAAU,kBACVqC,KAAK,OACLnF,KAAK,OACLsD,GAAG,OACHgC,SAAUL,EALX,UAOC,wBAAQ1E,MAAM,QAAd,mBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,WAAd,6BAGF,sBAAKuC,UAAU,8BAAf,UACC,uBAAOuC,QAAQ,MAAf,uBACA,uBACCE,YAAY,SACZJ,KAAK,WACLnF,KAAK,WACLsD,GAAG,MACHgC,SAAUL,OAGZ,qBAAKnC,UAAU,6CAAf,SACC,wBACC9C,KAAK,SACL8C,UAAU,6CAFX,iC,oDC2HQsD,GAjMF,WAAO,IAAD,EACiBnC,mBAAS,CACzChE,QAAS,GACToG,SAAU,YACVC,QAAS,KACTC,aAAc,KACdC,OAAQ,KACRC,WAAY,KAPG,mBACVrC,EADU,KACCC,EADD,OAUMC,sBAAYP,GAA5B2C,EAVU,oBAWHC,EAAgB/D,mBAASb,GAA/Bc,KAEF+D,EAAqB,uCAAG,WAAOlC,GAAP,SAAAC,EAAA,6DAC5BD,EAAME,iBADsB,kBAGpB8B,EAAa,CACjB7B,UAAW,CACT5E,QAASmE,EAAUnE,QACnBoG,SAAUjC,EAAUiC,SACpBC,QAASlC,EAAUkC,QACnBC,aAAcnC,EAAUmC,aACxBC,OAAQpC,EAAUoC,OAClBC,WAAYrC,EAAUqC,cAVA,uBAapBpC,EAAa,CACjBpE,QAAS,GACToG,SAAU,YACVC,QAAS,KACTC,aAAc,KACdC,OAAQ,KACRC,WAAY,KAnBY,OAqB1B/B,EAAMQ,OAAO2B,QArBa,gDAuB1B9B,QAAQC,IAAR,MAvB0B,yDAAH,sDA2BrBC,EAAe,SAACP,GAAW,IAAD,EACNA,EAAMQ,OAAtBC,EADsB,EACtBA,KAAM5E,EADgB,EAChBA,MACd8D,EAAa,2BACRD,GADO,kBAETe,EAAO5E,MAiBZ,OAbA0B,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIC,EAAQF,SAASG,iBAAiB,eACtCC,KAAYyE,WAAWC,YAAY5E,EAAO,CACxC6E,SAAU,SAAUC,GAClBlC,QAAQC,IAAI,aAAeiC,GAC3B5C,EAAa,2BACRD,GADO,IAEVqC,WAAYQ,WAOlB,8BACE,uBAAM3D,GAAG,OAAO8B,SAAUwB,EAA1B,UACE,sBAAK9D,UAAU,cAAf,UACE,8BACE,cAAC,cAAD,CACEoE,MAAM,iBACN/B,KAAK,aACL7B,GAAG,aACHtD,KAAK,OACL8C,UAAU,aACVvC,MAAO6D,EAAUqC,WACjBnB,SAAU,SAAC6B,GACTlC,EAAa,CACXC,OAAQ,CACN5B,GAAI,aACJ6B,KAAM,aACN5E,MAAO6G,KAAOD,GAASE,OAAO,yBAMxC,gCACE,uBAAOhC,QAAQ,UAAf,oDAGA,yBACEvC,UAAU,kBACVqC,KAAK,UACLnF,KAAK,SACLsD,GAAG,UACHgC,SAAUL,EALZ,UAOE,wBAAQqC,UAAQ,EAACC,UAAQ,EAAzB,4BAGCZ,EACCA,EAAYa,SAASC,KAAI,SAACxH,GAAD,OACvB,yBAAQM,MAAON,EAAQyH,IAAvB,UACGzH,EAAQ0H,WACR,KACA1H,EAAQ2H,YACR,OAJ8B3H,EAAQyH,QAQ3C,mDAIN,gCACE,uBAAOrC,QAAQ,WAAf,wDAGA,yBACEvC,UAAU,kBACVqC,KAAK,WACLnF,KAAK,SACLsD,GAAG,WACHgC,SAAUL,EALZ,UAOE,wBAAQ1E,MAAM,YAAd,yBACA,wBAAQA,MAAM,QAAd,sCACA,wBAAQA,MAAM,SAAd,8DAGA,wBAAQA,MAAM,QAAd,yBAGJ,gCACE,uBAAO8E,QAAQ,UAAf,0GAIA,yBACEvC,UAAU,kBACVqC,KAAK,UACLnF,KAAK,SACLsD,GAAG,UACHgC,SAAUL,EALZ,UAOE,wBAAQ1E,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,uBAGJ,gCACE,uBAAO8E,QAAQ,eAAf,8FAIA,yBACEvC,UAAU,kBACVqC,KAAK,eACLnF,KAAK,SACLsD,GAAG,eACHgC,SAAUL,EALZ,UAOE,wBAAQ1E,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,0BAGJ,gCACE,uBAAO8E,QAAQ,SAAf,8DAGA,yBACEvC,UAAU,kBACVqC,KAAK,SACLnF,KAAK,SACLsD,GAAG,SACHgC,SAAUL,EALZ,UAOE,wBAAQ1E,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,0BAIN,qBAAKuC,UAAU,6CAAf,SACE,wBACE9C,KAAK,SACL8C,UAAU,6CAFZ,4BChJK+E,GAvCC,WAAO,IAAD,IACdpF,EAAWC,EAAKD,WACRE,EAAaC,mBAASf,GAA5BgB,KAER,OACE,mCACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,iBAAf,SACGL,GAAYE,EACX,gCACE,oBAAIG,UAAU,eAAd,kCACA,8BAC0B,WAAf,OAARH,QAAQ,IAARA,GAAA,UAAAA,EAAUS,UAAV,eAAcC,OAIY,gBAAf,OAARV,QAAQ,IAARA,GAAA,UAAAA,EAAUS,UAAV,eAAcC,MAHhB,8BACE,cAAC,GAAD,MAOF,8BACE,mIASR,2EC4BGyE,OA5Df,WACE,IAAMrF,EAAWC,EAAKD,WADJ,EAEeG,mBAASZ,GAAlC+F,EAFU,EAEVA,QAASvD,EAFC,EAEDA,MAAO3B,EAFN,EAEMA,KACVF,EAAaC,mBAASf,GAA5BgB,KAER,OAAKA,EAGDkF,EACK,6CAGLvD,GACFO,QAAQP,MAAMA,GACP,0CAIP,mCACE,qBAAK1B,UAAU,YAAf,SACGL,GAAYE,EACX,gCACE,oBAAIG,UAAU,eAAd,8BACA,sBAAKA,UAAU,MAAf,UACGiC,QAAQC,IAAIgD,KAAKC,UAAUpF,EAAK3C,WAAY,KAAM,IAClD2C,EAAK3C,WAAWuH,KAAI,SAACS,EAAMC,GAAP,OACnB,qBAAKrF,UAAU,aAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,uBAAMA,UAAU,aAAhB,2BACiBoF,EAAKR,OAEtB,2CAAcQ,EAAK7B,YACnB,sDAAyB6B,EAAK5B,WAC9B,sDAAyB4B,EAAK3B,gBAC9B,uDAA0B2B,EAAK1B,UAC/B,8BACG0B,EAAKjI,SACJ,+BACG8E,QAAQC,IAAIkD,EAAKjI,QAAL,KACb,iDAAoBiI,EAAKjI,QAAQyH,OACjC,8CAAiBQ,EAAKjI,QAAQ0H,cAC9B,+CAAkBO,EAAKjI,QAAQ2H,wBAfKM,EAAKR,MADpBS,YA2BvC,0EA/CC,kECKLC,GAAS,IAAIC,IAAa,CAC/BC,QAAS,SAAAC,GACR,IAAMxH,EAAQM,aAAaC,QAAQ,YACnCiH,EAAUC,WAAW,CACpBC,QAAS,CACRC,cAAe3H,EAAK,iBAAaA,GAAU,OAI9C4H,IAAK,aA4BSC,IC/CXC,GD+CWD,GAzBf,WACC,OACC,cAAC,iBAAD,CAAgBR,OAAQA,GAAxB,SACC,cAAC,IAAD,UACC,mCACC,eAAC,EAAD,WACC,cAAC,EAAD,IACA,qBAAKtF,UAAU,MAAf,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,IAAIC,UAAWpF,IACjC,cAAC,IAAD,CAAOkF,OAAK,EAACC,KAAK,SAASC,UAAWhF,IACtC,cAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,UAAUC,UAAW/C,KACvC,cAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,WAAWC,UAAWnB,KACxC,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,YAAYC,UAAWlB,KACzC,cAAC,IAAD,CAAOkB,UAAWjD,SAGpB,cAAC,EAAD,cEpCAkD,GAAcC,QACW,cAA7BzH,OAAOC,SAASyH,UAEe,UAA7B1H,OAAOC,SAASyH,UAEhB1H,OAAOC,SAASyH,SAASC,MAAM,2DAgCnC,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhK,QACf0J,UAAUC,cAAcQ,YAI1BlF,QAAQC,IACN,+GAIEuE,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlB7E,QAAQC,IAAI,sCAERuE,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAAC5F,GACNO,QAAQP,MAAM,4CAA6CA,MD7EjE,IAAM6F,GAAgBpI,SAASqI,eAAe,kBAU9C,SAASC,KAER1B,GAAe2B,SACfH,GAAc/C,UAAW,EAGzBuB,GAAe4B,WAAWd,MAAK,SAAAe,GACD,aAAzBA,EAAaC,SAChB5F,QAAQC,IAAI,sBACZqF,GAAc7G,QAAS,GAEvBuB,QAAQC,IAAI,sBAEbqF,GAAc/C,UAAW,EACzBuB,GAAiB,QAtBnB+B,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,GAAD,MAED7I,SAASqI,eAAe,SAuBzB7I,OAAOS,iBAAiB,uBAAuB,SAAA6I,GAC9ChG,QAAQC,IAAI,6BAEZ+F,EAAEnG,iBAEFiE,GAAiBkC,EAEjBV,GAAc7G,QAAS,EACvB6G,GAAcnI,iBAAiB,QAASqI,OAIzC9I,OAAOS,iBAAiB,gBAAgB,SAAA8I,GACvCjG,QAAQC,IAAI,qBAAsBgG,MCjC5B,SAAkBzB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIyB,IAAIC,GAAwBzJ,OAAOC,SAASqB,MACpDoI,SAAW1J,OAAOC,SAASyJ,OAIvC,OAEF1J,OAAOS,iBAAiB,QAAQ,WAC9B,IAAMoH,EAAK,UAAM4B,GAAN,sBACPjC,KA2DV,SAAiCK,EAAOC,GAEtC6B,MAAM9B,EAAO,CACXb,QAAS,CAAE,iBAAkB,YAE5BkB,MAAK,SAAC0B,GAEL,IAAMC,EAAcD,EAAS5C,QAAQ8C,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CjC,UAAUC,cAAciC,MAAM/B,MAAK,SAACC,GAClCA,EAAa+B,aAAahC,MAAK,WAC7BlI,OAAOC,SAASkK,eAKpBvC,GAAgBC,EAAOC,MAG1Ba,OAAM,WACLrF,QAAQC,IAAI,oEAjFV6G,CAAwBvC,EAAOC,GAG/BC,UAAUC,cAAciC,MAAM/B,MAAK,WACjC5E,QAAQC,IACN,+GAMJqE,GAAgBC,EAAOC,ODe/BE,K","file":"static/js/main.e1ca3b28.chunk.js","sourcesContent":["import { useReducer } from \"react\";\nimport { UPDATE_CONTROL, UPDATE_SCREENINGS } from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated control array\n    case UPDATE_CONTROL:\n      return {\n        ...state,\n        control: [...action.control],\n      };\n    // if action type value is the value of `UPDATE_SCREENINGS`, return a new state object with an updated screenings array\n    case UPDATE_SCREENINGS:\n      return {\n        ...state,\n        screenings: [...action.screenings.screenings],\n      };\n    // if it's none of these actions, do not update state at all and keep things the same!\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","\nexport const UPDATE_FORMS = \"UPDATE_FORMS\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const ADD_SCREENING = \"ADD_SCREENING\";\n\nexport const UPDATE_CONTROL = \"UPDATE_CONTROL\";\nexport const UPDATE_SCREENINGS = \"UPDATE_SCREENINGS\";\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from \"./reducers\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    control: [],\n    screenings: [],\n  });\n  // use this to confirm it works!\n  //console.log(state);\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n\n    window.location.assign(\"/landing\");\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem(\"id_token\");\n    // this will reload the page and reset the state of the application\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();\n","import gql from \"graphql-tag\";\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      username\n      email\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      role\n    }\n  }\n`;\n\nexport const QUERY_CONTROL = gql`\n  {\n    controls {\n      _id\n      documentor\n      credentials\n    }\n  }\n`;\n\nexport const QUERY_SCREENINGS = gql`\n  {\n    screenings {\n      _id\n      control {\n        _id\n        documentor\n        credentials\n      }\n      symptoms\n      contact\n      positiveTest\n      travel\n      screenDate\n      createdAt\n    }\n  }\n`;\n","import React from 'react';\nimport Auth from '../../utils/auth';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_ME } from '../../utils/queries';\nimport Materialize from 'materialize-css/dist/js/materialize.min.js';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\tlet elems = document.querySelectorAll('.sidenav');\n\tMaterialize.Sidenav.init(elems, {});\n});\n\nfunction Nav() {\n\tconst loggedIn = Auth.loggedIn();\n\tconst { data: userData } = useQuery(QUERY_ME);\n\t//console.log(userData);\n\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t{loggedIn && userData ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{/* this is the regular nav menu when the user is logged in and on a desktop */}\n\t\t\t\t\t\t<nav className='nav-wrapper blue darken-1'>\n\t\t\t\t\t\t\t<a href='/' className='brand-logo left margin-left'>\n\t\t\t\t\t\t\t\tWhatever Works 2.0\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref='#!'\n\t\t\t\t\t\t\t\tdata-target='mobile-demo'\n\t\t\t\t\t\t\t\tclassName='sidenav-trigger right'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className='material-icons'>menu</i>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<ul className='flex-row right hide-on-med-and-down'>\n\t\t\t\t\t\t\t\t<li className='mx-1 sidenav-close'>\n\t\t\t\t\t\t\t\t\t<a href='/' onClick={() => Auth.logout()}>\n\t\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className='sidenav-close'>\n\t\t\t\t\t\t\t\t\t<Link to='/viewdata'>View Data</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t{userData?.me?.role === 'admin' ? (\n\t\t\t\t\t\t\t\t\t<li className='mx-1'>\n\t\t\t\t\t\t\t\t\t\t<a href='/signup'>Create Account</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</nav>\n\n\t\t\t\t\t\t{/* this is the login element for the sidenav when the menu is hidden on a smaller screen AND the user is logged in */}\n\t\t\t\t\t\t<ul className='sidenav' id='mobile-demo'>\n\t\t\t\t\t\t\t<li className='mx-1 sidenav-close'>\n\t\t\t\t\t\t\t\t<a href='/' onClick={() => Auth.logout()}>\n\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className='sidenav-close'>\n\t\t\t\t\t\t\t\t<Link to='/'>Home</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className='sidenav-close'>\n\t\t\t\t\t\t\t\t<Link to='/landing'>Forms</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className='sidenav-close'>\n\t\t\t\t\t\t\t\t<Link to='/viewdata'>View Data</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t{userData?.me?.role === 'admin' ? (\n\t\t\t\t\t\t\t\t<li className='mx-1 sidenav-close'>\n\t\t\t\t\t\t\t\t\t<a href='/signup'>Create Account</a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{/* this is the regular nav menu on a desktop */}\n\t\t\t\t\t\t<nav className='nav-wrapper blue darken-1'>\n\t\t\t\t\t\t\t<a href='/' className='brand-logo left margin-left'>\n\t\t\t\t\t\t\t\tWhatever Works 2.0\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref='#!'\n\t\t\t\t\t\t\t\tdata-target='mobile-demo'\n\t\t\t\t\t\t\t\tclassName='sidenav-trigger right'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className='material-icons'>menu</i>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<ul className='flex-row right hide-on-med-and-down'>\n\t\t\t\t\t\t\t\t<li className='mx-1 sidenav-close'>\n\t\t\t\t\t\t\t\t\t<Link to='/login'>Login</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</nav>\n\n\t\t\t\t\t\t{/* this is the login element for the sidenav when the menu is hidden on a smaller screen AND the user is not logged in */}\n\t\t\t\t\t\t<ul className='sidenav' id='mobile-demo'>\n\t\t\t\t\t\t\t<li className='mx-1 sidenav-close'>\n\t\t\t\t\t\t\t\t<Link to='/login'>Login</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Nav;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\n// import { Link } from 'react-router-dom';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { QUERY_ME } from \"../../utils/queries\";\n\nfunction Footer() {\n  const loggedIn = Auth.loggedIn();\n  const { data: userData } = useQuery(QUERY_ME);\n  //console.log(userData);\n\n  return (\n    <div>\n      {loggedIn && userData ? (\n        // if the user is logged in and there is userdata, then return this footer element\n        <footer className=\"page-footer blue darken-1 footer-test\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col l6 s12\">\n                <h5 className=\"white-text\">Footer Content</h5>\n                <p className=\"grey-text text-lighten-4\">\n                  You can use rows and columns here to organize your footer\n                  content.\n                </p>\n              </div>\n              <div className=\"col l4 offset-l2 s12\">\n                <h5 className=\"white-text\">Links</h5>\n                <ul>\n                  <li>\n                    <a className=\"grey-text text-lighten-3\" href=\"/\">\n                      Home\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"grey-text text-lighten-3\" href=\"/landing\">\n                      Forms\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"grey-text text-lighten-3\" href=\"/viewData\">\n                      View Data\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"grey-text text-lighten-3\" href=\"#!\">\n                      Contact Us\n                    </a>\n                  </li>\n                  <li>\n                    <button id=\"install_button\" hidden>\n                      Install\n                    </button>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"footer-copyright\">\n            <div className=\"container\">© 2021 Whatever Works 2.0</div>\n          </div>\n        </footer>\n      ) : (\n        // if the user is not logged in, then return this footer element\n        <footer className=\"page-footer blue darken-1 footer-test\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col l6 s12\">\n                <h5 className=\"white-text\">Footer Content</h5>\n                <p className=\"grey-text text-lighten-4\">\n                  You can use rows and columns here to organize your footer\n                  content.\n                </p>\n              </div>\n              <div className=\"col l4 offset-l2 s12\">\n                <h5 className=\"white-text\">Links</h5>\n                <ul>\n                  <li>\n                    <a className=\"grey-text text-lighten-3\" href=\"/\">\n                      Home\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"grey-text text-lighten-3\" href=\"/login\">\n                      Login\n                    </a>\n                  </li>\n                  <li>\n                    <button id=\"install_button\" hidden>\n                      Install\n                    </button>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"footer-copyright\">\n            <div className=\"container\">© 2021 Whatever Works 2.0</div>\n          </div>\n        </footer>\n      )}\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Auth from '../../utils/auth';\n// import { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_ME } from '../../utils/queries';\n\nfunction Body() {\n\tconst loggedIn = Auth.loggedIn();\n\tconst { data: userData } = useQuery(QUERY_ME);\n\t//console.log(userData);\n\n\treturn (\n\t\t<div>\n\t\t\t{loggedIn && userData ? (\n\t\t\t\t<div className='row body-display'>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t{/* image from https://www.oogazone.com/wp-content/uploads/2018/06/best-free-data-analysis-design-concept-vector-library.jpg */}\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/547/940/original/data-analysis-illustration-vector.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/540/087/original/vector-analysis-word-lettering-illustration.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/547/754/non_2x/data-analysis-line-icons-illustration-vector.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className='row body-display'>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t{/* image from https://www.oogazone.com/wp-content/uploads/2018/06/best-free-data-analysis-design-concept-vector-library.jpg */}\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/547/940/original/data-analysis-illustration-vector.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/540/087/original/vector-analysis-word-lettering-illustration.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s12 m4'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<div className='card-image'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc='https://static.vecteezy.com/system/resources/previews/000/547/754/non_2x/data-analysis-line-icons-illustration-vector.jpg'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='card-title'>Card Title</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-content'>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tI am a very simple card. I am good at containing small bits of\n\t\t\t\t\t\t\t\t\tinformation. I am convenient because I require little markup\n\t\t\t\t\t\t\t\t\tto use effectively.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='card-action'>\n\t\t\t\t\t\t\t\t<a href='/'>This is a link</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Body;\n","import React from 'react';\n// import Landing from \"../pages/Landing\";\n// import ViewData from \"./ViewData\";\nimport Body from '../components/Body';\n\nconst Home = () => {\n\treturn (\n\t\t<>\n\t\t\t<div className='fit'>\n\t\t\t\t<Body />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Home;\n","import gql from \"graphql-tag\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        role\n        email\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $username: String!\n    $email: String!\n    $role: String!\n    $password: String!\n  ) {\n    addUser(\n      username: $username\n      email: $email\n      role: $role\n      password: $password\n    ) {\n      token\n      user {\n        _id\n        username\n        role\n        email\n      }\n    }\n  }\n`;\n\nexport const ADD_SCREENING = gql`\n  mutation addScreening(\n    $control: ID!\n    $symptoms: String!\n    $contact: String!\n    $positiveTest: String!\n    $travel: String!\n    $screenDate: String!\n  ) {\n    addScreening(\n      control: $control\n      symptoms: $symptoms\n      contact: $contact\n      positiveTest: $positiveTest\n      travel: $travel\n      screenDate: $screenDate\n    ) {\n      control {\n        _id\n        documentor\n        credentials\n      }\n      symptoms\n      contact\n      positiveTest\n      travel\n      screenDate\n    }\n  }\n`;\n\nexport const ADD_CONTROL = gql`\n  mutation addControl(\n    $documentor: String!\n    $screenNum: Int!\n    $credentials: String!\n  ) {\n    Control(\n      documentor: $documentor\n      screenNum: $screenNum\n      credentials: $credentials\n    )\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n\tconst [formState, setFormState] = useState({\n\t\temail: '',\n\t\tpassword: ''\n\t});\n\tconst [login, { error }] = useMutation(LOGIN);\n\n\tconst handleFormSubmit = async event => {\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tconst mutationResponse = await login({\n\t\t\t\tvariables: {\n\t\t\t\t\temail: formState.email,\n\t\t\t\t\tpassword: formState.password\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst token = mutationResponse.data.login.token;\n\t\t\tAuth.login(token);\n\t\t\tconsole.log(mutationResponse);\n\t\t\tconsole.log(token);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t};\n\n\tconst handleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tsetFormState({\n\t\t\t...formState,\n\t\t\t[name]: value\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className='fit login-parent'>\n\t\t\t\t<div className='my-1'>\n\t\t\t\t\t<div id='card-custom'>\n\t\t\t\t\t\t<h5 className='center align'>Welcome to whatever works!</h5>\n\t\t\t\t\t\t<form onSubmit={handleFormSubmit}>\n\t\t\t\t\t\t\t<div className='flex-row space-between my-2'>\n\t\t\t\t\t\t\t\t<label htmlFor='email'>Email address:</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='flex-row space-between my-2'>\n\t\t\t\t\t\t\t\t<label htmlFor='pwd'>Password:</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tplaceholder='******'\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tid='pwd'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{error ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className='error-text'>\n\t\t\t\t\t\t\t\t\t\tThe provided credentials are incorrect\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<div className='flex-row center-align'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tclassName='waves-effect waves-light btn blue darken-1 login-btn'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className='material-icons center'>send</i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Login;\n","import React from 'react';\n\nfunction Jumbotron({ children }) {\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\theight: 560,\n\t\t\t\tclear: 'both',\n\t\t\t\tpaddingTop: 120,\n\t\t\t\ttextAlign: 'center'\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n\tconst [formState, setFormState] = useState({\n\t\temail: '',\n\t\tusername: '',\n\t\trole: 'Admin',\n\t\tpassword: ''\n\t});\n\tconst [addUser] = useMutation(ADD_USER);\n\n\tconst handleFormSubmit = async event => {\n\t\tevent.preventDefault();\n\t\tconst mutationResponse = await addUser({\n\t\t\tvariables: {\n\t\t\t\temail: formState.email,\n\t\t\t\tpassword: formState.password,\n\t\t\t\trole: formState.role,\n\t\t\t\tusername: formState.username\n\t\t\t}\n\t\t});\n\t\tconst token = mutationResponse.data.addUser.token;\n\t\tAuth.login(token);\n\t};\n\n\tconst handleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tsetFormState({\n\t\t\t...formState,\n\t\t\t[name]: value\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className='fit'>\n\t\t\t\t<div className='container my-1 login-parent'>\n\t\t\t\t\t<h2 className='center-align'>Create Account</h2>\n\t\t\t\t\t<form onSubmit={handleFormSubmit}>\n\t\t\t\t\t\t<div className='flex-row space-between my-2'>\n\t\t\t\t\t\t\t<label htmlFor='email'>Email:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tplaceholder='youremail@test.com'\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor='role'>Select User Authorizaion</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclassName='browser-default'\n\t\t\t\t\t\t\t\tname='role'\n\t\t\t\t\t\t\t\ttype='role'\n\t\t\t\t\t\t\t\tid='role'\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value='admin'>Admin</option>\n\t\t\t\t\t\t\t\t<option value='read/write'>Read/Write</option>\n\t\t\t\t\t\t\t\t<option value='readOnly'>Read Only</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='flex-row space-between my-2'>\n\t\t\t\t\t\t\t<label htmlFor='pwd'>Password:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tplaceholder='******'\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tid='pwd'\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='flex-row flex-end center-align padding-top'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\tclassName='waves-effect waves-light btn blue darken-1'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { ADD_SCREENING } from \"../../utils/mutations\";\nimport { QUERY_CONTROL } from \"../../utils/queries\";\nimport { DatePicker } from \"react-materialize\";\nimport Materialize from \"materialize-css\";\nimport moment from \"moment\";\n\nconst Form = () => {\n  const [formState, setFormState] = useState({\n    control: \"\",\n    symptoms: \"noSymptom\",\n    contact: \"no\",\n    positiveTest: \"no\",\n    travel: \"no\",\n    screenDate: \"\",\n  });\n\n  const [addScreening] = useMutation(ADD_SCREENING);\n  const { data: controlData } = useQuery(QUERY_CONTROL);\n\n  const handleScreeningSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await addScreening({\n        variables: {\n          control: formState.control,\n          symptoms: formState.symptoms,\n          contact: formState.contact,\n          positiveTest: formState.positiveTest,\n          travel: formState.travel,\n          screenDate: formState.screenDate,\n        },\n      });\n      await setFormState({\n        control: \"\",\n        symptoms: \"noSymptom\",\n        contact: \"no\",\n        positiveTest: \"no\",\n        travel: \"no\",\n        screenDate: \"\",\n      });\n      event.target.reset();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    var elems = document.querySelectorAll(\".datepicker\");\n    Materialize.DatePicker.getInstance(elems, {\n      onSelect: function (date) {\n        console.log(\"onSelect: \" + date);\n        setFormState({\n          ...formState,\n          screenDate: date,\n        });\n      },\n    });\n  });\n\n  return (\n    <div>\n      <form id=\"form\" onSubmit={handleScreeningSubmit}>\n        <div className=\"form-margin\">\n          <div>\n            <DatePicker\n              label=\"Screening Date\"\n              name=\"screenDate\"\n              id=\"screenDate\"\n              type=\"text\"\n              className=\"datepicker\"\n              value={formState.screenDate}\n              onChange={(newDate) => {\n                handleChange({\n                  target: {\n                    id: \"screenDate\",\n                    name: \"screenDate\",\n                    value: moment(newDate).format(\"MMMM DD, YYYY\"),\n                  },\n                });\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"control\">\n              Please select Control for this Screen.\n            </label>\n            <select\n              className=\"browser-default\"\n              name=\"control\"\n              type=\"select\"\n              id=\"control\"\n              onChange={handleChange}\n            >\n              <option disabled selected>\n                Select Control\n              </option>\n              {controlData ? (\n                controlData.controls.map((control) => (\n                  <option value={control._id} key={control._id}>\n                    {control.documentor}\n                    {\" (\"}\n                    {control.credentials}\n                    {\") \"}\n                  </option>\n                ))\n              ) : (\n                <option>Loading</option>\n              )}\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"symptoms\">\n              Do you have any of the following symptoms?\n            </label>\n            <select\n              className=\"browser-default\"\n              name=\"symptoms\"\n              type=\"select\"\n              id=\"symptoms\"\n              onChange={handleChange}\n            >\n              <option value=\"noSymptom\">No Symptoms</option>\n              <option value=\"cough\">New and persistent cough</option>\n              <option value=\"breath\">\n                Shortness of breath or any difficutlty breathing\n              </option>\n              <option value=\"fever\">Fever</option>\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"contact\">\n              Have you been in contact with anyone in the last 14 days who is\n              experiencing these symptoms?\n            </label>\n            <select\n              className=\"browser-default\"\n              name=\"contact\"\n              type=\"select\"\n              id=\"contact\"\n              onChange={handleChange}\n            >\n              <option value=\"no\">No</option>\n              <option value=\"yes\">Yes</option>\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"positiveTest\">\n              Have you been in contact with anyone who has since tested positive\n              for Covid-19?\n            </label>\n            <select\n              className=\"browser-default\"\n              name=\"positiveTest\"\n              type=\"select\"\n              id=\"positiveTest\"\n              onChange={handleChange}\n            >\n              <option value=\"no\">No</option>\n              <option value=\"yes\">Yes</option>\n              <option value=\"unsure\">Unsure</option>\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"travel\">\n              Have you traveled abroad in the last 1-2 months?\n            </label>\n            <select\n              className=\"browser-default\"\n              name=\"travel\"\n              type=\"select\"\n              id=\"travel\"\n              onChange={handleChange}\n            >\n              <option value=\"no\">No</option>\n              <option value=\"yes\">Yes</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"flex-row flex-end center-align padding-top\">\n          <button\n            type=\"submit\"\n            className=\"waves-effect waves-light btn blue darken-1\"\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport Auth from \"../utils/auth\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { QUERY_ME } from \"../utils/queries\";\nimport Form from \"../components/Form\";\n\nconst Landing = () => {\n  const loggedIn = Auth.loggedIn();\n  const { data: userData } = useQuery(QUERY_ME);\n\n  return (\n    <>\n      <div className=\"fit\">\n        <div className=\"form-container\">\n          {loggedIn && userData ? (\n            <div>\n              <h3 className=\"center-align\">COVID Screening Form</h3>\n              <div>\n                {userData?.me?.role === \"admin\" ? (\n                  <div>\n                    <Form />\n                  </div>\n                ) : userData?.me?.role === \"read/write\" ? (\n                  <div>\n                    <Form />\n                  </div>\n                ) : (\n                  <div>\n                    <p>\n                      if logged in and user does not have admin or read/write\n                      access, default to read only access\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div>Please Login to access your form!</div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Landing;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { QUERY_ME, QUERY_SCREENINGS } from \"../utils/queries\";\nimport Auth from \"../utils/auth\";\n\nfunction ViewData() {\n  const loggedIn = Auth.loggedIn();\n  const { loading, error, data } = useQuery(QUERY_SCREENINGS);\n  const { data: userData } = useQuery(QUERY_ME);\n\n  if (!data) {\n    return <div>No forms have been filled out.</div>;\n  }\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    console.error(error);\n    return <div>Error!</div>;\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        {loggedIn && userData ? (\n          <div>\n            <h2 className=\"center-align\">Completed Forms:</h2>\n            <div className=\"row\">\n              {console.log(JSON.stringify(data.screenings, null, 2))}\n              {data.screenings.map((info, index) => (\n                <div className=\"col s12 m4\" key={index}>\n                  <div className=\"card blue-grey darken-1\" key={info._id}>\n                    <div className=\"card-content white-text\">\n                      <span className=\"card-title\">\n                        Screening Id: {info._id}\n                      </span>\n                      <p>Symptoms: {info.symptoms}</p>\n                      <p>Contact with others: {info.contact}</p>\n                      <p>Positive covid test: {info.positiveTest}</p>\n                      <p>International Travel: {info.travel}</p>\n                      <div>\n                        {info.control && (\n                          <ul>\n                            {console.log(info.control[\"_id\"])}\n                            <li>Controller ID: {info.control._id}</li>\n                            <li>Documentor: {info.control.documentor}</li>\n                            <li>Credentials: {info.control.credentials}</li>\n                          </ul>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div> Please login to access your forms.</div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default ViewData;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { StoreProvider } from './utils/GlobalState';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min.js';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport NoMatch from './pages/NoMatch';\nimport Signup from './pages/Signup';\nimport Landing from './pages/Landing';\nimport ViewData from './pages/ViewData';\n\nconst client = new ApolloClient({\n\trequest: operation => {\n\t\tconst token = localStorage.getItem('id_token');\n\t\toperation.setContext({\n\t\t\theaders: {\n\t\t\t\tauthorization: token ? `Bearer ${token}` : ''\n\t\t\t}\n\t\t});\n\t},\n\turi: '/graphql'\n});\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<Router>\n\t\t\t\t<>\n\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t<Nav />\n\t\t\t\t\t\t<div className='fit'>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path='/' component={Home} />\n\t\t\t\t\t\t\t\t<Route exact path='/login' component={Login} />\n\t\t\t\t\t\t\t\t<Route exact path='/signup' component={Signup} />\n\t\t\t\t\t\t\t\t<Route exact path='/landing' component={Landing} />\n\t\t\t\t\t\t\t\t<Route exact path='/viewdata' component={ViewData} />\n\t\t\t\t\t\t\t\t<Route component={NoMatch} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</StoreProvider>\n\t\t\t\t</>\n\t\t\t</Router>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorkerRegistration';\n\nlet deferredPrompt; // Allows to show the install prompt\nconst installButton = document.getElementById('install_button');\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// function that shows the install prompt\nfunction installApp() {\n\t// Show the prompt\n\tdeferredPrompt.prompt();\n\tinstallButton.disabled = true;\n\n\t// Wait for the user to respond to the prompt\n\tdeferredPrompt.userChoice.then(choiceResult => {\n\t\tif (choiceResult.outcome === 'accepted') {\n\t\t\tconsole.log('PWA setup accepted');\n\t\t\tinstallButton.hidden = true;\n\t\t} else {\n\t\t\tconsole.log('PWA setup rejected');\n\t\t}\n\t\tinstallButton.disabled = false;\n\t\tdeferredPrompt = null;\n\t});\n}\n\n//  intercept the beforeinstallprompt event which is fired when the PWA meets to install criteria. In this event event handler, we need to keep a reference to the event and show the install button.\nwindow.addEventListener('beforeinstallprompt', e => {\n\tconsole.log('beforeinstallprompt fired');\n\t// Prevent Chrome 76 and earlier from automatically showing a prompt\n\te.preventDefault();\n\t// Stash the event so it can be triggered later.\n\tdeferredPrompt = e;\n\t// Show the install button\n\tinstallButton.hidden = false;\n\tinstallButton.addEventListener('click', installApp);\n});\n\n// listen for the app installed event to perform any additional setup when the install finished\nwindow.addEventListener('appinstalled', evt => {\n\tconsole.log('appinstalled fired', evt);\n});\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}"],"sourceRoot":""}